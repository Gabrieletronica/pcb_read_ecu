;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 30/07/2022 19:56:00
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2BAF      	GOTO       943
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00E9      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00E8      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A1      	MOVWF      33
0x000D	0x0871      	MOVF       R1, 0
0x000E	0x00A0      	MOVWF      32
0x000F	0x0804      	MOVF       FSR, 0
0x0010	0x00A2      	MOVWF      34
;Painel_software_pic16f73.c,57 :: 		void interrupt()
;Painel_software_pic16f73.c,59 :: 		if(CCP1IF_bit && CCP1CON.B0)             //Interrupção do módulo CCP e modo de captura configurado para borda de subida?
0x0011	0x1D0C      	BTFSS      CCP1IF_bit, BitPos(CCP1IF_bit+0)
0x0012	0x2822      	GOTO       L_interrupt30
0x0013	0x1C17      	BTFSS      CCP1CON, 0
0x0014	0x2822      	GOTO       L_interrupt30
L__interrupt67:
;Painel_software_pic16f73.c,61 :: 		CCP1IF_bit  = 0x00;                    //Limpa a flag para nova captura
0x0015	0x110C      	BCF        CCP1IF_bit, BitPos(CCP1IF_bit+0)
;Painel_software_pic16f73.c,62 :: 		CCP1IE_bit  = 0x00;                    //Desabilita interrupção do periférico CCP
0x0016	0x1683      	BSF        STATUS, 5
0x0017	0x110C      	BCF        CCP1IE_bit, BitPos(CCP1IE_bit+0)
;Painel_software_pic16f73.c,63 :: 		CCP1CON     = 0x04;                    //Configura captura por borda de descida
0x0018	0x3004      	MOVLW      4
0x0019	0x1283      	BCF        STATUS, 5
0x001A	0x0097      	MOVWF      CCP1CON
;Painel_software_pic16f73.c,64 :: 		CCP1IE_bit  = 0x01;                    //Habilita interrupção do periférico CCP
0x001B	0x1683      	BSF        STATUS, 5
0x001C	0x150C      	BSF        CCP1IE_bit, BitPos(CCP1IE_bit+0)
;Painel_software_pic16f73.c,65 :: 		TMR1H       = 0x00;                    //Zera registrador high do TMR1
0x001D	0x1283      	BCF        STATUS, 5
0x001E	0x018F      	CLRF       TMR1H
;Painel_software_pic16f73.c,66 :: 		TMR1L       = 0x00;                    //Zera registrador low do TMR1
0x001F	0x018E      	CLRF       TMR1L
;Painel_software_pic16f73.c,67 :: 		TMR1ON_bit  = 0x01;                    //Habilita contagem de tempo
0x0020	0x1410      	BSF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;Painel_software_pic16f73.c,68 :: 		} //end if
0x0021	0x2833      	GOTO       L_interrupt31
L_interrupt30:
;Painel_software_pic16f73.c,70 :: 		else if(CCP1IF_bit)                      //Interrupção do módulo CCP?
0x0022	0x1D0C      	BTFSS      CCP1IF_bit, BitPos(CCP1IF_bit+0)
0x0023	0x2833      	GOTO       L_interrupt32
;Painel_software_pic16f73.c,72 :: 		CCP1IF_bit  = 0x00;                    //Limpa a flag para nova captura
0x0024	0x110C      	BCF        CCP1IF_bit, BitPos(CCP1IF_bit+0)
;Painel_software_pic16f73.c,73 :: 		TMR1ON_bit  = 0x00;                    //Desabilita contagem de tempo
0x0025	0x1010      	BCF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;Painel_software_pic16f73.c,74 :: 		CCP1IE_bit  = 0x00;                    //Desabilita interrupção do periférico CCP
0x0026	0x1683      	BSF        STATUS, 5
0x0027	0x110C      	BCF        CCP1IE_bit, BitPos(CCP1IE_bit+0)
;Painel_software_pic16f73.c,75 :: 		CCP1CON     = 0x00;                    //Desabilita captura por borda de subida
0x0028	0x1283      	BCF        STATUS, 5
0x0029	0x0197      	CLRF       CCP1CON
;Painel_software_pic16f73.c,76 :: 		CCP1IE_bit  = 0x01;                    //Habilita interrupção do periférico CCP    //comentei
0x002A	0x1683      	BSF        STATUS, 5
0x002B	0x150C      	BSF        CCP1IE_bit, BitPos(CCP1IE_bit+0)
;Painel_software_pic16f73.c,77 :: 		Tempo_H_rpm  = CCPR1H;                  //Valor do tempo em ns é armazenado na variável Tempo_H (registrador CCPR1H)
0x002C	0x1283      	BCF        STATUS, 5
0x002D	0x0816      	MOVF       CCPR1H, 0
0x002E	0x00B4      	MOVWF      _Tempo_H_rpm
;Painel_software_pic16f73.c,78 :: 		Tempo_L_rpm  = CCPR1L;                  //Valor do tempo em ns é armazenado na variável Tempo_L (registrador CCPR1L)
0x002F	0x0815      	MOVF       CCPR1L, 0
0x0030	0x00A6      	MOVWF      _Tempo_L_rpm
;Painel_software_pic16f73.c,80 :: 		CCP2CON  = 0x05;                    //Habilita interrupção do periférico CCP           //coloquei
0x0031	0x3005      	MOVLW      5
0x0032	0x009D      	MOVWF      CCP2CON
;Painel_software_pic16f73.c,81 :: 		} //end else*/
L_interrupt32:
L_interrupt31:
;Painel_software_pic16f73.c,84 :: 		if(CCP2IF_bit && CCP2CON.B0)             //Interrupção do módulo CCP e modo de captura configurado para borda de subida?
0x0033	0x1C0D      	BTFSS      CCP2IF_bit, BitPos(CCP2IF_bit+0)
0x0034	0x2844      	GOTO       L_interrupt35
0x0035	0x1C1D      	BTFSS      CCP2CON, 0
0x0036	0x2844      	GOTO       L_interrupt35
L__interrupt66:
;Painel_software_pic16f73.c,86 :: 		CCP2IF_bit  = 0x00;                    //Limpa a flag para nova captura
0x0037	0x100D      	BCF        CCP2IF_bit, BitPos(CCP2IF_bit+0)
;Painel_software_pic16f73.c,87 :: 		CCP2IE_bit  = 0x00;                    //Desabilita interrupção do periférico CCP
0x0038	0x1683      	BSF        STATUS, 5
0x0039	0x100D      	BCF        CCP2IE_bit, BitPos(CCP2IE_bit+0)
;Painel_software_pic16f73.c,88 :: 		CCP2CON     = 0x04;                    //Configura captura por borda de descida
0x003A	0x3004      	MOVLW      4
0x003B	0x1283      	BCF        STATUS, 5
0x003C	0x009D      	MOVWF      CCP2CON
;Painel_software_pic16f73.c,89 :: 		CCP2IE_bit  = 0x01;                    //Habilita interrupção do periférico CCP
0x003D	0x1683      	BSF        STATUS, 5
0x003E	0x140D      	BSF        CCP2IE_bit, BitPos(CCP2IE_bit+0)
;Painel_software_pic16f73.c,90 :: 		TMR1H       = 0x00;                    //Zera registrador low do TMR1
0x003F	0x1283      	BCF        STATUS, 5
0x0040	0x018F      	CLRF       TMR1H
;Painel_software_pic16f73.c,91 :: 		TMR1L       = 0x00;                    //Zera registrador high do TMR1
0x0041	0x018E      	CLRF       TMR1L
;Painel_software_pic16f73.c,92 :: 		TMR1ON_bit  = 0x01;                    //Habilita contagem de tempo
0x0042	0x1410      	BSF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;Painel_software_pic16f73.c,93 :: 		} //end if
0x0043	0x2855      	GOTO       L_interrupt36
L_interrupt35:
;Painel_software_pic16f73.c,94 :: 		else if(CCP2IF_bit)                      //Interrupção do módulo CCP?
0x0044	0x1C0D      	BTFSS      CCP2IF_bit, BitPos(CCP2IF_bit+0)
0x0045	0x2855      	GOTO       L_interrupt37
;Painel_software_pic16f73.c,96 :: 		CCP2IF_bit  = 0x00;                    //Limpa a flag para nova captura
0x0046	0x100D      	BCF        CCP2IF_bit, BitPos(CCP2IF_bit+0)
;Painel_software_pic16f73.c,97 :: 		TMR1ON_bit  = 0x00;                    //Desabilita contagem de tempo
0x0047	0x1010      	BCF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;Painel_software_pic16f73.c,98 :: 		CCP2IE_bit  = 0x00;                    //Desabilita interrupção do periférico CCP
0x0048	0x1683      	BSF        STATUS, 5
0x0049	0x100D      	BCF        CCP2IE_bit, BitPos(CCP2IE_bit+0)
;Painel_software_pic16f73.c,99 :: 		CCP2CON     = 0x00;                    //Desabilita captura
0x004A	0x1283      	BCF        STATUS, 5
0x004B	0x019D      	CLRF       CCP2CON
;Painel_software_pic16f73.c,100 :: 		CCP2IE_bit  = 0x01;                    //Habilita interrupção do periférico CCP
0x004C	0x1683      	BSF        STATUS, 5
0x004D	0x140D      	BSF        CCP2IE_bit, BitPos(CCP2IE_bit+0)
;Painel_software_pic16f73.c,101 :: 		Tempo_H_vel   = CCPR2H;                  //Valor do tempo em ns é armazenado na variável Tempo_H (registrador CCPR2H)
0x004E	0x1283      	BCF        STATUS, 5
0x004F	0x081C      	MOVF       CCPR2H, 0
0x0050	0x00BE      	MOVWF      _Tempo_H_vel
;Painel_software_pic16f73.c,102 :: 		Tempo_L_vel   = CCPR2L;                  //Valor do tempo em ns é armazenado na variável Tempo_L (registrador CCPR2L)
0x0051	0x081B      	MOVF       CCPR2L, 0
0x0052	0x00A5      	MOVWF      _Tempo_L_vel
;Painel_software_pic16f73.c,104 :: 		CCP1CON  = 0x05;                       //Habilita interrupção do periférico CCP  // coloquei
0x0053	0x3005      	MOVLW      5
0x0054	0x0097      	MOVWF      CCP1CON
;Painel_software_pic16f73.c,105 :: 		}
L_interrupt37:
L_interrupt36:
;Painel_software_pic16f73.c,108 :: 		if(INTF_bit){
0x0055	0x1C8B      	BTFSS      INTF_bit, BitPos(INTF_bit+0)
0x0056	0x2858      	GOTO       L_interrupt38
;Painel_software_pic16f73.c,110 :: 		recebe_dados();
0x0057	0x236E      	CALL       _recebe_dados
;Painel_software_pic16f73.c,111 :: 		}
L_interrupt38:
;Painel_software_pic16f73.c,113 :: 		} //end interrupt
L_end_interrupt:
L__interrupt79:
0x0058	0x0821      	MOVF       33, 0
0x0059	0x00F0      	MOVWF      R0
0x005A	0x0820      	MOVF       32, 0
0x005B	0x00F1      	MOVWF      R1
0x005C	0x0822      	MOVF       34, 0
0x005D	0x0084      	MOVWF      FSR
0x005E	0x0868      	MOVF       ___savePCLATH, 0
0x005F	0x008A      	MOVWF      PCLATH
0x0060	0x0E69      	SWAPF      ___saveSTATUS, 0
0x0061	0x0083      	MOVWF      STATUS
0x0062	0x0EFF      	SWAPF      R15, 1
0x0063	0x0E7F      	SWAPF      R15, 0
0x0064	0x0009      	RETFIE
; end of _interrupt
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0065	0x0000      	NOP
0x0066	0x0000      	NOP
0x0067	0x0000      	NOP
0x0068	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0069	0x0008      	RETURN
; end of _Delay_1us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x006A	0x3042      	MOVLW      66
0x006B	0x1283      	BCF        STATUS, 5
0x006C	0x1303      	BCF        STATUS, 6
0x006D	0x00FD      	MOVWF      R13
L_Delay_50us2:
0x006E	0x0BFD      	DECFSZ     R13, 1
0x006F	0x286E      	GOTO       L_Delay_50us2
0x0070	0x0000      	NOP
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0071	0x0008      	RETURN
; end of _Delay_50us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0072	0x301D      	MOVLW      29
0x0073	0x1283      	BCF        STATUS, 5
0x0074	0x1303      	BCF        STATUS, 6
0x0075	0x00FC      	MOVWF      R12
0x0076	0x3091      	MOVLW      145
0x0077	0x00FD      	MOVWF      R13
L_Delay_5500us5:
0x0078	0x0BFD      	DECFSZ     R13, 1
0x0079	0x2878      	GOTO       L_Delay_5500us5
0x007A	0x0BFC      	DECFSZ     R12, 1
0x007B	0x2878      	GOTO       L_Delay_5500us5
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x007C	0x0008      	RETURN
; end of _Delay_5500us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x007D	0x1683      	BSF        STATUS, 5
0x007E	0x1303      	BCF        STATUS, 6
0x007F	0x1BE5      	BTFSC      FARG_Lcd_Cmd_out_char, 7
0x0080	0x2884      	GOTO       L__Lcd_Cmd21
0x0081	0x1283      	BCF        STATUS, 5
0x0082	0x1307      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x0083	0x2886      	GOTO       L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0084	0x1283      	BCF        STATUS, 5
0x0085	0x1707      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0086	0x1683      	BSF        STATUS, 5
0x0087	0x1B65      	BTFSC      FARG_Lcd_Cmd_out_char, 6
0x0088	0x288C      	GOTO       L__Lcd_Cmd23
0x0089	0x1283      	BCF        STATUS, 5
0x008A	0x1387      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x008B	0x288E      	GOTO       L__Lcd_Cmd24
L__Lcd_Cmd23:
0x008C	0x1283      	BCF        STATUS, 5
0x008D	0x1787      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x008E	0x1683      	BSF        STATUS, 5
0x008F	0x1AE5      	BTFSC      FARG_Lcd_Cmd_out_char, 5
0x0090	0x2894      	GOTO       L__Lcd_Cmd25
0x0091	0x1283      	BCF        STATUS, 5
0x0092	0x1106      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x0093	0x2896      	GOTO       L__Lcd_Cmd26
L__Lcd_Cmd25:
0x0094	0x1283      	BCF        STATUS, 5
0x0095	0x1506      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x0096	0x1683      	BSF        STATUS, 5
0x0097	0x1A65      	BTFSC      FARG_Lcd_Cmd_out_char, 4
0x0098	0x289C      	GOTO       L__Lcd_Cmd27
0x0099	0x1283      	BCF        STATUS, 5
0x009A	0x1186      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x009B	0x289E      	GOTO       L__Lcd_Cmd28
L__Lcd_Cmd27:
0x009C	0x1283      	BCF        STATUS, 5
0x009D	0x1586      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x009E	0x184C      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x009F	0x28A2      	GOTO       L__Lcd_Cmd29
0x00A0	0x1686      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x00A1	0x28A3      	GOTO       L__Lcd_Cmd30
L__Lcd_Cmd29:
0x00A2	0x1286      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x00A3	0x1606      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,29 :: 		
0x00A4	0x2065      	CALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x00A5	0x1206      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,33 :: 		
0x00A6	0x1683      	BSF        STATUS, 5
0x00A7	0x19E5      	BTFSC      FARG_Lcd_Cmd_out_char, 3
0x00A8	0x28AC      	GOTO       L__Lcd_Cmd31
0x00A9	0x1283      	BCF        STATUS, 5
0x00AA	0x1307      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x00AB	0x28AE      	GOTO       L__Lcd_Cmd32
L__Lcd_Cmd31:
0x00AC	0x1283      	BCF        STATUS, 5
0x00AD	0x1707      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x00AE	0x1683      	BSF        STATUS, 5
0x00AF	0x1965      	BTFSC      FARG_Lcd_Cmd_out_char, 2
0x00B0	0x28B4      	GOTO       L__Lcd_Cmd33
0x00B1	0x1283      	BCF        STATUS, 5
0x00B2	0x1387      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x00B3	0x28B6      	GOTO       L__Lcd_Cmd34
L__Lcd_Cmd33:
0x00B4	0x1283      	BCF        STATUS, 5
0x00B5	0x1787      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x00B6	0x1683      	BSF        STATUS, 5
0x00B7	0x18E5      	BTFSC      FARG_Lcd_Cmd_out_char, 1
0x00B8	0x28BC      	GOTO       L__Lcd_Cmd35
0x00B9	0x1283      	BCF        STATUS, 5
0x00BA	0x1106      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x00BB	0x28BE      	GOTO       L__Lcd_Cmd36
L__Lcd_Cmd35:
0x00BC	0x1283      	BCF        STATUS, 5
0x00BD	0x1506      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x00BE	0x1683      	BSF        STATUS, 5
0x00BF	0x1865      	BTFSC      FARG_Lcd_Cmd_out_char, 0
0x00C0	0x28C4      	GOTO       L__Lcd_Cmd37
0x00C1	0x1283      	BCF        STATUS, 5
0x00C2	0x1186      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x00C3	0x28C6      	GOTO       L__Lcd_Cmd38
L__Lcd_Cmd37:
0x00C4	0x1283      	BCF        STATUS, 5
0x00C5	0x1586      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x00C6	0x184C      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x00C7	0x28CA      	GOTO       L__Lcd_Cmd39
0x00C8	0x1686      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x00C9	0x28CB      	GOTO       L__Lcd_Cmd40
L__Lcd_Cmd39:
0x00CA	0x1286      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x00CB	0x1606      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,41 :: 		
0x00CC	0x2065      	CALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00CD	0x1206      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,44 :: 		
0x00CE	0x1C4C      	BTFSS      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x00CF	0x28D2      	GOTO       L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x00D0	0x2072      	CALL       _Delay_5500us
0x00D1	0x28D3      	GOTO       L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x00D2	0x206A      	CALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x00D3	0x0008      	RETURN
; end of _Lcd_Cmd
_SPI1_Write:
;__Lib_SPI_c345.c,77 :: 		
;__Lib_SPI_c345.c,80 :: 		
0x00D4	0x1283      	BCF        STATUS, 5
0x00D5	0x1303      	BCF        STATUS, 6
0x00D6	0x0824      	MOVF       FARG_SPI1_Write_data_, 0
0x00D7	0x0093      	MOVWF      SSPBUF
;__Lib_SPI_c345.c,81 :: 		
L_SPI1_Write8:
0x00D8	0x1683      	BSF        STATUS, 5
0x00D9	0x1814      	BTFSC      SSPSTAT, 0
0x00DA	0x28DD      	GOTO       L_SPI1_Write9
;__Lib_SPI_c345.c,82 :: 		
0x00DB	0x0000      	NOP
0x00DC	0x28D8      	GOTO       L_SPI1_Write8
L_SPI1_Write9:
;__Lib_SPI_c345.c,83 :: 		
0x00DD	0x1283      	BCF        STATUS, 5
0x00DE	0x0813      	MOVF       SSPBUF, 0
0x00DF	0x00F0      	MOVWF      R0
;__Lib_SPI_c345.c,84 :: 		
L_end_SPI1_Write:
0x00E0	0x0008      	RETURN
; end of _SPI1_Write
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x00E1	0x1283      	BCF        STATUS, 5
0x00E2	0x1303      	BCF        STATUS, 6
0x00E3	0x086B      	MOVF       ___DoICPAddr+1, 0
0x00E4	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00E5	0x086A      	MOVF       ___DoICPAddr, 0
0x00E6	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x00E7	0x0008      	RETURN
; end of _____DoICP
_SPI1_Read:
;__Lib_SPI_c345.c,69 :: 		
;__Lib_SPI_c345.c,70 :: 		
0x00E8	0x1283      	BCF        STATUS, 5
0x00E9	0x1303      	BCF        STATUS, 6
0x00EA	0x0823      	MOVF       FARG_SPI1_Read_buffer, 0
0x00EB	0x0093      	MOVWF      SSPBUF
;__Lib_SPI_c345.c,71 :: 		
L_SPI1_Read6:
0x00EC	0x1683      	BSF        STATUS, 5
0x00ED	0x1814      	BTFSC      SSPSTAT, 0
0x00EE	0x28F1      	GOTO       L_SPI1_Read7
;__Lib_SPI_c345.c,72 :: 		
0x00EF	0x0000      	NOP
0x00F0	0x28EC      	GOTO       L_SPI1_Read6
L_SPI1_Read7:
;__Lib_SPI_c345.c,73 :: 		
0x00F1	0x1283      	BCF        STATUS, 5
0x00F2	0x0813      	MOVF       SSPBUF, 0
0x00F3	0x00F0      	MOVWF      R0
;__Lib_SPI_c345.c,74 :: 		
L_end_SPI1_Read:
0x00F4	0x0008      	RETURN
; end of _SPI1_Read
_SPI1_Init:
;__Lib_SPI_c345.c,23 :: 		
;__Lib_SPI_c345.c,24 :: 		
0x00F5	0x30E8      	MOVLW      _SPI1_Read
0x00F6	0x1283      	BCF        STATUS, 5
0x00F7	0x1303      	BCF        STATUS, 6
0x00F8	0x00CD      	MOVWF      _SPI_Rd_Ptr
0x00F9	0x3000      	MOVLW      hi_addr(_SPI1_Read)
0x00FA	0x00CE      	MOVWF      _SPI_Rd_Ptr+1
0x00FB	0x3023      	MOVLW      FARG_SPI1_Read_buffer
0x00FC	0x00CF      	MOVWF      _SPI_Rd_Ptr+2
0x00FD	0x3000      	MOVLW      hi_addr(FARG_SPI1_Read_buffer)
;__Lib_SPI_c345.c,25 :: 		
0x00FE	0x30D4      	MOVLW      _SPI1_Write
0x00FF	0x00C4      	MOVWF      _SPI_Wr_Ptr
0x0100	0x3000      	MOVLW      hi_addr(_SPI1_Write)
0x0101	0x00C5      	MOVWF      _SPI_Wr_Ptr+1
0x0102	0x3024      	MOVLW      FARG_SPI1_Write_data_
0x0103	0x00C6      	MOVWF      _SPI_Wr_Ptr+2
0x0104	0x3000      	MOVLW      hi_addr(FARG_SPI1_Write_data_)
;__Lib_SPI_c345.c,29 :: 		
0x0105	0x1683      	BSF        STATUS, 5
0x0106	0x1287      	BCF        TRISC5_bit, BitPos(TRISC5_bit+0)
;__Lib_SPI_c345.c,30 :: 		
0x0107	0x1187      	BCF        TRISC3_bit, BitPos(TRISC3_bit+0)
;__Lib_SPI_c345.c,31 :: 		
0x0108	0x1607      	BSF        TRISC4_bit, BitPos(TRISC4_bit+0)
;__Lib_SPI_c345.c,33 :: 		
0x0109	0x1283      	BCF        STATUS, 5
0x010A	0x0194      	CLRF       SSPCON
;__Lib_SPI_c345.c,34 :: 		
0x010B	0x3040      	MOVLW      64
0x010C	0x1683      	BSF        STATUS, 5
0x010D	0x0094      	MOVWF      SSPSTAT
;__Lib_SPI_c345.c,35 :: 		
0x010E	0x1283      	BCF        STATUS, 5
0x010F	0x1694      	BSF        SSPCON, 5
;__Lib_SPI_c345.c,36 :: 		
L_end_SPI1_Init:
0x0110	0x0008      	RETURN
; end of _SPI1_Init
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x0111	0x1283      	BCF        STATUS, 5
0x0112	0x1303      	BCF        STATUS, 6
0x0113	0x104C      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,53 :: 		
0x0114	0x1683      	BSF        STATUS, 5
0x0115	0x0864      	MOVF       FARG_Lcd_Chr_CP_out_char, 0
0x0116	0x00E5      	MOVWF      FARG_Lcd_Cmd_out_char
0x0117	0x207D      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x0118	0x144C      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0119	0x0008      	RETURN
; end of _Lcd_Chr_CP
_Div_8X8_U:
;__Lib_Math.c,189 :: 		
;__Lib_Math.c,196 :: 		
0x011A	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,197 :: 		
0x011B	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,198 :: 		
0x011C	0x01F8      	CLRF       R8
;__Lib_Math.c,199 :: 		
0x011D	0x3008      	MOVLW      8
;__Lib_Math.c,200 :: 		
0x011E	0x00FC      	MOVWF      R12
;__Lib_Math.c,201 :: 		
0x011F	0x0D70      	RLF        R0, 0
;__Lib_Math.c,202 :: 		
0x0120	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,203 :: 		
0x0121	0x0874      	MOVF       R4, 0
;__Lib_Math.c,204 :: 		
0x0122	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,205 :: 		
0x0123	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,206 :: 		
0x0124	0x2927      	GOTO       $+3
;__Lib_Math.c,207 :: 		
0x0125	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,208 :: 		
0x0126	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,209 :: 		
0x0127	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,210 :: 		
0x0128	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,211 :: 		
0x0129	0x291F      	GOTO       $-10
;__Lib_Math.c,213 :: 		
L_end_Div_8X8_U:
0x012A	0x0008      	RETURN
; end of _Div_8X8_U
_Lcd_Out_CP:
;__Lib_Lcd.c,57 :: 		
;__Lib_Lcd.c,58 :: 		
0x012B	0x1683      	BSF        STATUS, 5
0x012C	0x1303      	BCF        STATUS, 6
0x012D	0x01E1      	CLRF       Lcd_Out_CP_i_L0
;__Lib_Lcd.c,60 :: 		
L_Lcd_Out_CP2:
0x012E	0x0861      	MOVF       Lcd_Out_CP_i_L0, 0
0x012F	0x0760      	ADDWF      FARG_Lcd_Out_CP_text, 0
0x0130	0x0084      	MOVWF      FSR
0x0131	0x0800      	MOVF       INDF, 0
0x0132	0x1903      	BTFSC      STATUS, 2
0x0133	0x293D      	GOTO       L_Lcd_Out_CP3
;__Lib_Lcd.c,61 :: 		
0x0134	0x0861      	MOVF       Lcd_Out_CP_i_L0, 0
0x0135	0x0760      	ADDWF      FARG_Lcd_Out_CP_text, 0
0x0136	0x0084      	MOVWF      FSR
0x0137	0x0800      	MOVF       INDF, 0
0x0138	0x00E4      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0139	0x2111      	CALL       _Lcd_Chr_CP
0x013A	0x1683      	BSF        STATUS, 5
0x013B	0x0AE1      	INCF       Lcd_Out_CP_i_L0, 1
;__Lib_Lcd.c,62 :: 		
0x013C	0x292E      	GOTO       L_Lcd_Out_CP2
L_Lcd_Out_CP3:
;__Lib_Lcd.c,63 :: 		
L_end_Lcd_Out_CP:
0x013D	0x0008      	RETURN
; end of _Lcd_Out_CP
_ByteToStr:
;__Lib_Conversions.c,66 :: 		
;__Lib_Conversions.c,69 :: 		
0x013E	0x1683      	BSF        STATUS, 5
0x013F	0x1303      	BCF        STATUS, 6
0x0140	0x01E2      	CLRF       ByteToStr_DigitPos_L0
L_ByteToStr0:
0x0141	0x3003      	MOVLW      3
0x0142	0x0262      	SUBWF      ByteToStr_DigitPos_L0, 0
0x0143	0x1803      	BTFSC      STATUS, 0
0x0144	0x294C      	GOTO       L_ByteToStr1
;__Lib_Conversions.c,70 :: 		
0x0145	0x0862      	MOVF       ByteToStr_DigitPos_L0, 0
0x0146	0x0761      	ADDWF      FARG_ByteToStr_output, 0
0x0147	0x0084      	MOVWF      FSR
0x0148	0x3020      	MOVLW      32
0x0149	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,69 :: 		
0x014A	0x0AE2      	INCF       ByteToStr_DigitPos_L0, 1
;__Lib_Conversions.c,70 :: 		
0x014B	0x2941      	GOTO       L_ByteToStr0
L_ByteToStr1:
;__Lib_Conversions.c,72 :: 		
0x014C	0x0862      	MOVF       ByteToStr_DigitPos_L0, 0
0x014D	0x0761      	ADDWF      FARG_ByteToStr_output, 0
0x014E	0x0084      	MOVWF      FSR
0x014F	0x0180      	CLRF       INDF
0x0150	0x03E2      	DECF       ByteToStr_DigitPos_L0, 1
;__Lib_Conversions.c,74 :: 		
L_ByteToStr3:
;__Lib_Conversions.c,75 :: 		
0x0151	0x0862      	MOVF       ByteToStr_DigitPos_L0, 0
0x0152	0x0761      	ADDWF      FARG_ByteToStr_output, 0
0x0153	0x00E3      	MOVWF      FLOC__ByteToStr
0x0154	0x300A      	MOVLW      10
0x0155	0x1283      	BCF        STATUS, 5
0x0156	0x00F4      	MOVWF      R4
0x0157	0x1683      	BSF        STATUS, 5
0x0158	0x0860      	MOVF       FARG_ByteToStr_input, 0
0x0159	0x1283      	BCF        STATUS, 5
0x015A	0x00F0      	MOVWF      R0
0x015B	0x211A      	CALL       _Div_8X8_U
0x015C	0x0878      	MOVF       R8, 0
0x015D	0x00F0      	MOVWF      R0
0x015E	0x3030      	MOVLW      48
0x015F	0x07F0      	ADDWF      R0, 1
0x0160	0x1683      	BSF        STATUS, 5
0x0161	0x0863      	MOVF       FLOC__ByteToStr, 0
0x0162	0x0084      	MOVWF      FSR
0x0163	0x1283      	BCF        STATUS, 5
0x0164	0x0870      	MOVF       R0, 0
0x0165	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,76 :: 		
0x0166	0x300A      	MOVLW      10
0x0167	0x00F4      	MOVWF      R4
0x0168	0x1683      	BSF        STATUS, 5
0x0169	0x0860      	MOVF       FARG_ByteToStr_input, 0
0x016A	0x1283      	BCF        STATUS, 5
0x016B	0x00F0      	MOVWF      R0
0x016C	0x211A      	CALL       _Div_8X8_U
0x016D	0x0870      	MOVF       R0, 0
0x016E	0x1683      	BSF        STATUS, 5
0x016F	0x00E0      	MOVWF      FARG_ByteToStr_input
;__Lib_Conversions.c,77 :: 		
0x0170	0x1283      	BCF        STATUS, 5
0x0171	0x0870      	MOVF       R0, 0
0x0172	0x3A00      	XORLW      0
0x0173	0x1D03      	BTFSS      STATUS, 2
0x0174	0x2976      	GOTO       L_ByteToStr5
;__Lib_Conversions.c,78 :: 		
0x0175	0x2979      	GOTO       L_ByteToStr4
L_ByteToStr5:
;__Lib_Conversions.c,79 :: 		
0x0176	0x1683      	BSF        STATUS, 5
0x0177	0x03E2      	DECF       ByteToStr_DigitPos_L0, 1
;__Lib_Conversions.c,80 :: 		
0x0178	0x2951      	GOTO       L_ByteToStr3
L_ByteToStr4:
;__Lib_Conversions.c,81 :: 		
L_end_ByteToStr:
0x0179	0x0008      	RETURN
; end of _ByteToStr
_envia_dados:
;nrf24l01.h,129 :: 		unsigned char envia_dados(){
;nrf24l01.h,133 :: 		GIE_bit = 0;  //Desabilita interrupção global(eu coloquei)
0x017A	0x138B      	BCF        GIE_bit, BitPos(GIE_bit+0)
;nrf24l01.h,134 :: 		CE = 0;
0x017B	0x1283      	BCF        STATUS, 5
0x017C	0x1303      	BCF        STATUS, 6
0x017D	0x1105      	BCF        RA2_bit, BitPos(RA2_bit+0)
;nrf24l01.h,137 :: 		CSN = 0;
0x017E	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,138 :: 		SPI1_Write(0x27);                  //spi_write(0x27);
0x017F	0x3027      	MOVLW      39
0x0180	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0181	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,139 :: 		SPI1_Write(0x70);                  //spi_write(0x70);
0x0182	0x3070      	MOVLW      112
0x0183	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0184	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,140 :: 		CSN = 1;
0x0185	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,143 :: 		CSN = 0;
0x0186	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,144 :: 		SPI1_Write(0xA0);                  //spi_write(0xA0);
0x0187	0x30A0      	MOVLW      160
0x0188	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0189	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,145 :: 		for ( i=0; i < BUFFER; i++ )
0x018A	0x1683      	BSF        STATUS, 5
0x018B	0x01E2      	CLRF       envia_dados_i_L0
L_envia_dados2:
0x018C	0x3005      	MOVLW      5
0x018D	0x0262      	SUBWF      envia_dados_i_L0, 0
0x018E	0x1803      	BTFSC      STATUS, 0
0x018F	0x299A      	GOTO       L_envia_dados3
;nrf24l01.h,147 :: 		SPI1_Write(ENVIA[i]);                  //spi_write(ENVIA[i]);
0x0190	0x0862      	MOVF       envia_dados_i_L0, 0
0x0191	0x3E35      	ADDLW      _ENVIA
0x0192	0x0084      	MOVWF      FSR
0x0193	0x0800      	MOVF       INDF, 0
0x0194	0x1283      	BCF        STATUS, 5
0x0195	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0196	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,145 :: 		for ( i=0; i < BUFFER; i++ )
0x0197	0x1683      	BSF        STATUS, 5
0x0198	0x0AE2      	INCF       envia_dados_i_L0, 1
;nrf24l01.h,148 :: 		}
0x0199	0x298C      	GOTO       L_envia_dados2
L_envia_dados3:
;nrf24l01.h,149 :: 		CSN = 1;
0x019A	0x1283      	BCF        STATUS, 5
0x019B	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,152 :: 		CSN = 0;
0x019C	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,153 :: 		SPI1_Write(0x20);                  //spi_write(0x20);
0x019D	0x3020      	MOVLW      32
0x019E	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x019F	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,154 :: 		SPI1_Write(0x0E);                  //spi_write(0x0E);
0x01A0	0x300E      	MOVLW      14
0x01A1	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x01A2	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,155 :: 		CSN = 1;
0x01A3	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,158 :: 		CE = 1;
0x01A4	0x1505      	BSF        RA2_bit, BitPos(RA2_bit+0)
;nrf24l01.h,159 :: 		delay_us(15);
0x01A5	0x3013      	MOVLW      19
0x01A6	0x00FD      	MOVWF      R13
L_envia_dados5:
0x01A7	0x0BFD      	DECFSZ     R13, 1
0x01A8	0x29A7      	GOTO       L_envia_dados5
0x01A9	0x0000      	NOP
0x01AA	0x0000      	NOP
;nrf24l01.h,160 :: 		CE = 0;
0x01AB	0x1105      	BCF        RA2_bit, BitPos(RA2_bit+0)
;nrf24l01.h,162 :: 		espera_ack=0;
0x01AC	0x1683      	BSF        STATUS, 5
0x01AD	0x01E0      	CLRF       envia_dados_espera_ack_L0
0x01AE	0x01E1      	CLRF       envia_dados_espera_ack_L0+1
;nrf24l01.h,164 :: 		while( IRQ == 1 )
L_envia_dados6:
0x01AF	0x1283      	BCF        STATUS, 5
0x01B0	0x1C06      	BTFSS      RB0_bit, BitPos(RB0_bit+0)
0x01B1	0x29C0      	GOTO       L_envia_dados7
;nrf24l01.h,166 :: 		espera_ack++;
0x01B2	0x1683      	BSF        STATUS, 5
0x01B3	0x0AE0      	INCF       envia_dados_espera_ack_L0, 1
0x01B4	0x1903      	BTFSC      STATUS, 2
0x01B5	0x0AE1      	INCF       envia_dados_espera_ack_L0+1, 1
;nrf24l01.h,168 :: 		if( espera_ack == 500 )
0x01B6	0x0861      	MOVF       envia_dados_espera_ack_L0+1, 0
0x01B7	0x3A01      	XORLW      1
0x01B8	0x1D03      	BTFSS      STATUS, 2
0x01B9	0x29BC      	GOTO       L__envia_dados75
0x01BA	0x30F4      	MOVLW      244
0x01BB	0x0660      	XORWF      envia_dados_espera_ack_L0, 0
L__envia_dados75:
0x01BC	0x1D03      	BTFSS      STATUS, 2
0x01BD	0x29BF      	GOTO       L_envia_dados8
;nrf24l01.h,170 :: 		break;
0x01BE	0x29C0      	GOTO       L_envia_dados7
;nrf24l01.h,171 :: 		}
L_envia_dados8:
;nrf24l01.h,172 :: 		}
0x01BF	0x29AF      	GOTO       L_envia_dados6
L_envia_dados7:
;nrf24l01.h,175 :: 		CSN = 0;
0x01C0	0x1283      	BCF        STATUS, 5
0x01C1	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,176 :: 		SPI1_Write(0x07);                  //spi_write(0x07);
0x01C2	0x3007      	MOVLW      7
0x01C3	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x01C4	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,177 :: 		status = SPI1_Read(0);             //spi_read(0);
0x01C5	0x01A3      	CLRF       FARG_SPI1_Read_buffer
0x01C6	0x20E8      	CALL       _SPI1_Read
;nrf24l01.h,178 :: 		CSN = 1;
0x01C7	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,181 :: 		CSN = 0;
0x01C8	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,182 :: 		SPI1_Write(0x27);                  //spi_write(0x27);
0x01C9	0x3027      	MOVLW      39
0x01CA	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x01CB	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,183 :: 		SPI1_Write(0x70);                  //spi_write(0x70);
0x01CC	0x3070      	MOVLW      112
0x01CD	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x01CE	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,184 :: 		CSN = 1;
0x01CF	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,187 :: 		CSN = 0;
0x01D0	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,188 :: 		SPI1_Write(0xE1);                  //spi_write(0xE1);
0x01D1	0x30E1      	MOVLW      225
0x01D2	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x01D3	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,189 :: 		CSN = 1;
0x01D4	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,192 :: 		CSN = 0;
0x01D5	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,193 :: 		SPI1_Write(0x20);                  //spi_write(0x20);
0x01D6	0x3020      	MOVLW      32
0x01D7	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x01D8	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,194 :: 		SPI1_Write(0x0F);                  //spi_write(0x0F);
0x01D9	0x300F      	MOVLW      15
0x01DA	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x01DB	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,195 :: 		CSN = 1;
0x01DC	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,197 :: 		CE = 1;
0x01DD	0x1505      	BSF        RA2_bit, BitPos(RA2_bit+0)
;nrf24l01.h,199 :: 		delay_us(150);
0x01DE	0x30C7      	MOVLW      199
0x01DF	0x00FD      	MOVWF      R13
L_envia_dados9:
0x01E0	0x0BFD      	DECFSZ     R13, 1
0x01E1	0x29E0      	GOTO       L_envia_dados9
0x01E2	0x0000      	NOP
0x01E3	0x0000      	NOP
;nrf24l01.h,203 :: 		if( espera_ack == 500 )
0x01E4	0x1683      	BSF        STATUS, 5
0x01E5	0x0861      	MOVF       envia_dados_espera_ack_L0+1, 0
0x01E6	0x3A01      	XORLW      1
0x01E7	0x1D03      	BTFSS      STATUS, 2
0x01E8	0x29EB      	GOTO       L__envia_dados76
0x01E9	0x30F4      	MOVLW      244
0x01EA	0x0660      	XORWF      envia_dados_espera_ack_L0, 0
L__envia_dados76:
0x01EB	0x1D03      	BTFSS      STATUS, 2
0x01EC	0x29F2      	GOTO       L_envia_dados10
;nrf24l01.h,205 :: 		INTF_bit = 0;
0x01ED	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;nrf24l01.h,206 :: 		GIE_bit = 1;
0x01EE	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;nrf24l01.h,207 :: 		return(0);
0x01EF	0x1283      	BCF        STATUS, 5
0x01F0	0x01F0      	CLRF       R0
0x01F1	0x29F7      	GOTO       L_end_envia_dados
;nrf24l01.h,208 :: 		}
L_envia_dados10:
0x01F2	0x1283      	BCF        STATUS, 5
;nrf24l01.h,212 :: 		GIE_bit = 1;
0x01F3	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;nrf24l01.h,213 :: 		INTF_bit = 0;
0x01F4	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;nrf24l01.h,214 :: 		return(1);
0x01F5	0x3001      	MOVLW      1
0x01F6	0x00F0      	MOVWF      R0
;nrf24l01.h,216 :: 		}
L_end_envia_dados:
0x01F7	0x0008      	RETURN
; end of _envia_dados
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x01F8	0x2A0A      	GOTO       L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x01F9	0x3080      	MOVLW      128
0x01FA	0x1683      	BSF        STATUS, 5
0x01FB	0x1303      	BCF        STATUS, 6
0x01FC	0x00E0      	MOVWF      FARG_Lcd_Out_row
0x01FD	0x2A1D      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x01FE	0x30C0      	MOVLW      192
0x01FF	0x00E0      	MOVWF      FARG_Lcd_Out_row
0x0200	0x2A1D      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0201	0x3094      	MOVLW      148
0x0202	0x00E0      	MOVWF      FARG_Lcd_Out_row
0x0203	0x2A1D      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x0204	0x30D4      	MOVLW      212
0x0205	0x00E0      	MOVWF      FARG_Lcd_Out_row
0x0206	0x2A1D      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x0207	0x3080      	MOVLW      128
0x0208	0x00E0      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,193 :: 		
0x0209	0x2A1D      	GOTO       L_Lcd_Out12
L_Lcd_Out11:
0x020A	0x1683      	BSF        STATUS, 5
0x020B	0x1303      	BCF        STATUS, 6
0x020C	0x0860      	MOVF       FARG_Lcd_Out_row, 0
0x020D	0x3A01      	XORLW      1
0x020E	0x1903      	BTFSC      STATUS, 2
0x020F	0x29F9      	GOTO       L_Lcd_Out13
0x0210	0x0860      	MOVF       FARG_Lcd_Out_row, 0
0x0211	0x3A02      	XORLW      2
0x0212	0x1903      	BTFSC      STATUS, 2
0x0213	0x29FE      	GOTO       L_Lcd_Out14
0x0214	0x0860      	MOVF       FARG_Lcd_Out_row, 0
0x0215	0x3A03      	XORLW      3
0x0216	0x1903      	BTFSC      STATUS, 2
0x0217	0x2A01      	GOTO       L_Lcd_Out15
0x0218	0x0860      	MOVF       FARG_Lcd_Out_row, 0
0x0219	0x3A04      	XORLW      4
0x021A	0x1903      	BTFSC      STATUS, 2
0x021B	0x2A04      	GOTO       L_Lcd_Out16
0x021C	0x2A07      	GOTO       L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x021D	0x0361      	DECF       FARG_Lcd_Out_column, 0
0x021E	0x1283      	BCF        STATUS, 5
0x021F	0x00F0      	MOVWF      R0
0x0220	0x1683      	BSF        STATUS, 5
0x0221	0x0860      	MOVF       FARG_Lcd_Out_row, 0
0x0222	0x1283      	BCF        STATUS, 5
0x0223	0x07F0      	ADDWF      R0, 1
0x0224	0x0870      	MOVF       R0, 0
0x0225	0x1683      	BSF        STATUS, 5
0x0226	0x00E0      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x0227	0x1283      	BCF        STATUS, 5
0x0228	0x0870      	MOVF       R0, 0
0x0229	0x1683      	BSF        STATUS, 5
0x022A	0x00E5      	MOVWF      FARG_Lcd_Cmd_out_char
0x022B	0x207D      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x022C	0x104C      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,198 :: 		
0x022D	0x1683      	BSF        STATUS, 5
0x022E	0x01E3      	CLRF       Lcd_Out_i_L0
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x022F	0x0863      	MOVF       Lcd_Out_i_L0, 0
0x0230	0x0762      	ADDWF      FARG_Lcd_Out_text, 0
0x0231	0x0084      	MOVWF      FSR
0x0232	0x0800      	MOVF       INDF, 0
0x0233	0x1903      	BTFSC      STATUS, 2
0x0234	0x2A3E      	GOTO       L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0235	0x0863      	MOVF       Lcd_Out_i_L0, 0
0x0236	0x0762      	ADDWF      FARG_Lcd_Out_text, 0
0x0237	0x0084      	MOVWF      FSR
0x0238	0x0800      	MOVF       INDF, 0
0x0239	0x00E4      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x023A	0x2111      	CALL       _Lcd_Chr_CP
0x023B	0x1683      	BSF        STATUS, 5
0x023C	0x0AE3      	INCF       Lcd_Out_i_L0, 1
0x023D	0x2A2F      	GOTO       L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x023E	0x1283      	BCF        STATUS, 5
0x023F	0x144C      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x0240	0x0008      	RETURN
; end of _Lcd_Out
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0241	0x1683      	BSF        STATUS, 5
0x0242	0x1303      	BCF        STATUS, 6
0x0243	0x1206      	BCF        LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,87 :: 		
0x0244	0x1286      	BCF        LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,88 :: 		
0x0245	0x1186      	BCF        LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,89 :: 		
0x0246	0x1106      	BCF        LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,90 :: 		
0x0247	0x1387      	BCF        LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,91 :: 		
0x0248	0x1307      	BCF        LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,93 :: 		
0x0249	0x1283      	BCF        STATUS, 5
0x024A	0x1206      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,94 :: 		
0x024B	0x1286      	BCF        LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,95 :: 		
0x024C	0x1307      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,96 :: 		
0x024D	0x1387      	BCF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,97 :: 		
0x024E	0x1106      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,98 :: 		
0x024F	0x1186      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,100 :: 		
0x0250	0x2072      	CALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x0251	0x2072      	CALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x0252	0x2072      	CALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x0253	0x1506      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,106 :: 		
0x0254	0x1586      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,107 :: 		
0x0255	0x1606      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,108 :: 		
0x0256	0x2065      	CALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x0257	0x1206      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,110 :: 		
0x0258	0x2072      	CALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x0259	0x1606      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,113 :: 		
0x025A	0x2065      	CALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x025B	0x1206      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,115 :: 		
0x025C	0x2072      	CALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x025D	0x1606      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,118 :: 		
0x025E	0x2065      	CALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x025F	0x1206      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,120 :: 		
0x0260	0x2072      	CALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x0261	0x1186      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,124 :: 		
0x0262	0x1606      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,125 :: 		
0x0263	0x2065      	CALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x0264	0x1206      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,127 :: 		
0x0265	0x2072      	CALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x0266	0x1606      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,131 :: 		
0x0267	0x2065      	CALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x0268	0x1206      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,134 :: 		
0x0269	0x1106      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,135 :: 		
0x026A	0x1707      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,136 :: 		
0x026B	0x1606      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,137 :: 		
0x026C	0x2065      	CALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x026D	0x1206      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,139 :: 		
0x026E	0x2072      	CALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x026F	0x1307      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,143 :: 		
0x0270	0x1586      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,144 :: 		
0x0271	0x1606      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,145 :: 		
0x0272	0x2065      	CALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x0273	0x1206      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,148 :: 		
0x0274	0x1186      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,149 :: 		
0x0275	0x1606      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,150 :: 		
0x0276	0x2065      	CALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x0277	0x1206      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,152 :: 		
0x0278	0x2072      	CALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x0279	0x1606      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,156 :: 		
0x027A	0x2065      	CALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x027B	0x1206      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,159 :: 		
0x027C	0x1586      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,160 :: 		
0x027D	0x1606      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,161 :: 		
0x027E	0x2065      	CALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x027F	0x1206      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,163 :: 		
0x0280	0x2072      	CALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x0281	0x1186      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,167 :: 		
0x0282	0x1606      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,168 :: 		
0x0283	0x2065      	CALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x0284	0x1206      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,171 :: 		
0x0285	0x1707      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,172 :: 		
0x0286	0x1787      	BSF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,173 :: 		
0x0287	0x1506      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,174 :: 		
0x0288	0x1586      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,175 :: 		
0x0289	0x1606      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,176 :: 		
0x028A	0x2065      	CALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x028B	0x1206      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,179 :: 		
0x028C	0x2072      	CALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x028D	0x144C      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x028E	0x0008      	RETURN
; end of _Lcd_Init
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x028F	0x20E1      	CALL       _____DoICP
0x0290	0x118A      	BCF        PCLATH, 3
0x0291	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0292	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0293	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0294	0x0AEA      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0295	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0296	0x0AEB      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0297	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0298	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0299	0x2A8F      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x029A	0x0008      	RETURN
; end of ___CC2DW
_medicao_marcha:
;Painel_software_pic16f73.c,116 :: 		void medicao_marcha(){
;Painel_software_pic16f73.c,120 :: 		if(MARCHA_1 && MARCHA_2){
0x029B	0x1283      	BCF        STATUS, 5
0x029C	0x1303      	BCF        STATUS, 6
0x029D	0x1C86      	BTFSS      RB1_bit, BitPos(RB1_bit+0)
0x029E	0x2AA3      	GOTO       L_medicao_marcha41
0x029F	0x1E05      	BTFSS      RA4_bit, BitPos(RA4_bit+0)
0x02A0	0x2AA3      	GOTO       L_medicao_marcha41
L__medicao_marcha72:
;Painel_software_pic16f73.c,121 :: 		marcha = 0;
0x02A1	0x01A7      	CLRF       _marcha
;Painel_software_pic16f73.c,122 :: 		}
0x02A2	0x2AAE      	GOTO       L_medicao_marcha42
L_medicao_marcha41:
;Painel_software_pic16f73.c,124 :: 		else if(!marcha){
0x02A3	0x0827      	MOVF       _marcha, 0
0x02A4	0x1D03      	BTFSS      STATUS, 2
0x02A5	0x2AAE      	GOTO       L_medicao_marcha43
;Painel_software_pic16f73.c,125 :: 		if(MARCHA_1 ){//&& !control){
0x02A6	0x1C86      	BTFSS      RB1_bit, BitPos(RB1_bit+0)
0x02A7	0x2AAA      	GOTO       L_medicao_marcha44
;Painel_software_pic16f73.c,127 :: 		marcha = 2;
0x02A8	0x3002      	MOVLW      2
0x02A9	0x00A7      	MOVWF      _marcha
;Painel_software_pic16f73.c,128 :: 		}
L_medicao_marcha44:
;Painel_software_pic16f73.c,133 :: 		if(MARCHA_2){// && !control2){
0x02AA	0x1E05      	BTFSS      RA4_bit, BitPos(RA4_bit+0)
0x02AB	0x2AAE      	GOTO       L_medicao_marcha45
;Painel_software_pic16f73.c,135 :: 		marcha = 1;
0x02AC	0x3001      	MOVLW      1
0x02AD	0x00A7      	MOVWF      _marcha
;Painel_software_pic16f73.c,136 :: 		}
L_medicao_marcha45:
;Painel_software_pic16f73.c,140 :: 		}
L_medicao_marcha43:
L_medicao_marcha42:
;Painel_software_pic16f73.c,141 :: 		if (marcha != 0){
0x02AE	0x0827      	MOVF       _marcha, 0
0x02AF	0x3A00      	XORLW      0
0x02B0	0x1903      	BTFSC      STATUS, 2
0x02B1	0x2AC8      	GOTO       L_medicao_marcha46
;Painel_software_pic16f73.c,142 :: 		if(MARCHA_1 && !control){
0x02B2	0x1C86      	BTFSS      RB1_bit, BitPos(RB1_bit+0)
0x02B3	0x2AB8      	GOTO       L_medicao_marcha49
0x02B4	0x18CC      	BTFSC      medicao_marcha_control_L0, BitPos(medicao_marcha_control_L0+0)
0x02B5	0x2AB8      	GOTO       L_medicao_marcha49
L__medicao_marcha71:
;Painel_software_pic16f73.c,143 :: 		control = 1;
0x02B6	0x14CC      	BSF        medicao_marcha_control_L0, BitPos(medicao_marcha_control_L0+0)
;Painel_software_pic16f73.c,144 :: 		marcha++;
0x02B7	0x0AA7      	INCF       _marcha, 1
;Painel_software_pic16f73.c,145 :: 		}
L_medicao_marcha49:
;Painel_software_pic16f73.c,146 :: 		if(!MARCHA_1 && control){
0x02B8	0x1886      	BTFSC      RB1_bit, BitPos(RB1_bit+0)
0x02B9	0x2ABD      	GOTO       L_medicao_marcha52
0x02BA	0x1CCC      	BTFSS      medicao_marcha_control_L0, BitPos(medicao_marcha_control_L0+0)
0x02BB	0x2ABD      	GOTO       L_medicao_marcha52
L__medicao_marcha70:
;Painel_software_pic16f73.c,147 :: 		control = 0;
0x02BC	0x10CC      	BCF        medicao_marcha_control_L0, BitPos(medicao_marcha_control_L0+0)
;Painel_software_pic16f73.c,148 :: 		}
L_medicao_marcha52:
;Painel_software_pic16f73.c,150 :: 		if(MARCHA_2 && !control2){
0x02BD	0x1E05      	BTFSS      RA4_bit, BitPos(RA4_bit+0)
0x02BE	0x2AC3      	GOTO       L_medicao_marcha55
0x02BF	0x194C      	BTFSC      medicao_marcha_control2_L0, BitPos(medicao_marcha_control2_L0+0)
0x02C0	0x2AC3      	GOTO       L_medicao_marcha55
L__medicao_marcha69:
;Painel_software_pic16f73.c,151 :: 		control2 = 1;
0x02C1	0x154C      	BSF        medicao_marcha_control2_L0, BitPos(medicao_marcha_control2_L0+0)
;Painel_software_pic16f73.c,152 :: 		marcha --;
0x02C2	0x03A7      	DECF       _marcha, 1
;Painel_software_pic16f73.c,153 :: 		}
L_medicao_marcha55:
;Painel_software_pic16f73.c,154 :: 		if(!MARCHA_2 && control2){
0x02C3	0x1A05      	BTFSC      RA4_bit, BitPos(RA4_bit+0)
0x02C4	0x2AC8      	GOTO       L_medicao_marcha58
0x02C5	0x1D4C      	BTFSS      medicao_marcha_control2_L0, BitPos(medicao_marcha_control2_L0+0)
0x02C6	0x2AC8      	GOTO       L_medicao_marcha58
L__medicao_marcha68:
;Painel_software_pic16f73.c,155 :: 		control2 = 0;
0x02C7	0x114C      	BCF        medicao_marcha_control2_L0, BitPos(medicao_marcha_control2_L0+0)
;Painel_software_pic16f73.c,156 :: 		}
L_medicao_marcha58:
;Painel_software_pic16f73.c,157 :: 		}
L_medicao_marcha46:
;Painel_software_pic16f73.c,158 :: 		if(marcha < 0){
0x02C8	0x3080      	MOVLW      128
0x02C9	0x0627      	XORWF      _marcha, 0
0x02CA	0x00F0      	MOVWF      R0
0x02CB	0x3080      	MOVLW      128
0x02CC	0x3A00      	XORLW      0
0x02CD	0x0270      	SUBWF      R0, 0
0x02CE	0x1803      	BTFSC      STATUS, 0
0x02CF	0x2AD2      	GOTO       L_medicao_marcha59
;Painel_software_pic16f73.c,159 :: 		marcha = 0;
0x02D0	0x01A7      	CLRF       _marcha
;Painel_software_pic16f73.c,160 :: 		}
0x02D1	0x2ADC      	GOTO       L_medicao_marcha60
L_medicao_marcha59:
;Painel_software_pic16f73.c,161 :: 		else if(marcha > 6){
0x02D2	0x3080      	MOVLW      128
0x02D3	0x3A06      	XORLW      6
0x02D4	0x00F0      	MOVWF      R0
0x02D5	0x3080      	MOVLW      128
0x02D6	0x0627      	XORWF      _marcha, 0
0x02D7	0x0270      	SUBWF      R0, 0
0x02D8	0x1803      	BTFSC      STATUS, 0
0x02D9	0x2ADC      	GOTO       L_medicao_marcha61
;Painel_software_pic16f73.c,162 :: 		marcha = 6;
0x02DA	0x3006      	MOVLW      6
0x02DB	0x00A7      	MOVWF      _marcha
;Painel_software_pic16f73.c,163 :: 		}
L_medicao_marcha61:
L_medicao_marcha60:
;Painel_software_pic16f73.c,164 :: 		}     // fim da função marcha
L_end_medicao_marcha:
0x02DC	0x0008      	RETURN
; end of _medicao_marcha
_config_nrf24:
;nrf24l01.h,27 :: 		void config_nrf24(){
;nrf24l01.h,28 :: 		GIE_bit = 0;
0x02DD	0x138B      	BCF        GIE_bit, BitPos(GIE_bit+0)
;nrf24l01.h,30 :: 		CSN_Direction = 0;                  // Saída Digital  -> Para habilitar uso do módulo
0x02DE	0x1683      	BSF        STATUS, 5
0x02DF	0x1303      	BCF        STATUS, 6
0x02E0	0x1185      	BCF        TRISA3_bit, BitPos(TRISA3_bit+0)
;nrf24l01.h,31 :: 		CE_Direction = 0;                   // Saída Digital  -> Para utilizar no envio de dados
0x02E1	0x1105      	BCF        TRISA2_bit, BitPos(TRISA2_bit+0)
;nrf24l01.h,32 :: 		IRQ_Direction = 1;                  // Entrada para interrupção
0x02E2	0x1406      	BSF        TRISB0_bit, BitPos(TRISB0_bit+0)
;nrf24l01.h,33 :: 		SPI1_Init();                        // Inicializa o SPI
0x02E3	0x20F5      	CALL       _SPI1_Init
;nrf24l01.h,34 :: 		CE = 0;                             //  Desativo o chip enquanto os valores são carregados
0x02E4	0x1105      	BCF        RA2_bit, BitPos(RA2_bit+0)
;nrf24l01.h,36 :: 		CSN = 0;
0x02E5	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,37 :: 		CSN = 1;
0x02E6	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,40 :: 		CSN = 0;                            // Inicio a comunicação SPI
0x02E7	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,41 :: 		SPI1_Write(0x2A);                  //spi_write(0x2A);
0x02E8	0x302A      	MOVLW      42
0x02E9	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x02EA	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,42 :: 		SPI1_Write(ENDRX);                  //spi_write(ENDRX);
0x02EB	0x304B      	MOVLW      75
0x02EC	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x02ED	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,43 :: 		SPI1_Write(0xC2);                   //spi_write(0xC2);
0x02EE	0x30C2      	MOVLW      194
0x02EF	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x02F0	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,44 :: 		SPI1_Write(0xC2);                   //spi_write(0xC2);
0x02F1	0x30C2      	MOVLW      194
0x02F2	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x02F3	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,45 :: 		SPI1_Write(0xC2);                   //spi_write(0xC2);
0x02F4	0x30C2      	MOVLW      194
0x02F5	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x02F6	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,46 :: 		SPI1_Write(0xC2);                   //spi_write(0xC2);
0x02F7	0x30C2      	MOVLW      194
0x02F8	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x02F9	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,47 :: 		CSN = 1;                            // Finalizo a comunicação  SPI
0x02FA	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,50 :: 		CSN = 0;                            // Inicio a comunicação  SPI
0x02FB	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,51 :: 		SPI1_Write(0x30);                   //spi_write(0x30);
0x02FC	0x3030      	MOVLW      48
0x02FD	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x02FE	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,52 :: 		SPI1_Write(ENDTX);                  //spi_write(ENDTX);
0x02FF	0x304B      	MOVLW      75
0x0300	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0301	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,53 :: 		SPI1_Write(0xC2);                   //spi_write(0xC2);
0x0302	0x30C2      	MOVLW      194
0x0303	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0304	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,54 :: 		SPI1_Write(0xC2);                   //spi_write(0xC2);
0x0305	0x30C2      	MOVLW      194
0x0306	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0307	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,55 :: 		SPI1_Write(0xC2);                   //spi_write(0xC2);
0x0308	0x30C2      	MOVLW      194
0x0309	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x030A	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,56 :: 		SPI1_Write(0xC2);                   //spi_write(0xC2);
0x030B	0x30C2      	MOVLW      194
0x030C	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x030D	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,57 :: 		CSN = 1;                            // Finalizo a comunicação  SPI
0x030E	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,60 :: 		CSN = 0;                           // Inicio a comunicação SPI
0x030F	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,61 :: 		SPI1_Write(0x21);                  //spi_write(0x21);
0x0310	0x3021      	MOVLW      33
0x0311	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0312	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,62 :: 		SPI1_Write(0x01);                  //spi_write(0x01);
0x0313	0x3001      	MOVLW      1
0x0314	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0315	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,63 :: 		CSN = 1;                           // Finalizo a comunicação SPI
0x0316	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,66 :: 		CSN = 0;                           // Inicio a comunicação  SPI
0x0317	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,67 :: 		SPI1_Write(0x22);                  //spi_write(0x22);
0x0318	0x3022      	MOVLW      34
0x0319	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x031A	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,68 :: 		SPI1_Write(0x01);                  //spi_write(0x01);
0x031B	0x3001      	MOVLW      1
0x031C	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x031D	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,69 :: 		CSN = 1;                           // Finalizo a comunicação  SPI
0x031E	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,72 :: 		CSN = 0;                           // Inicio a comunicação  SPI
0x031F	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,73 :: 		SPI1_Write(0x23);                  //spi_write(0x23);
0x0320	0x3023      	MOVLW      35
0x0321	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0322	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,74 :: 		SPI1_Write(0x03);                  //spi_write(0x03);
0x0323	0x3003      	MOVLW      3
0x0324	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0325	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,75 :: 		CSN = 1;                           // Finalizo a comunicação   SPI
0x0326	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,78 :: 		CSN = 0;                           // Inicio a comunicação  SPI
0x0327	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,79 :: 		SPI1_Write(0x24);                  //spi_write(0x24);
0x0328	0x3024      	MOVLW      36
0x0329	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x032A	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,80 :: 		SPI1_Write(0x00);                  //spi_write(0x00);
0x032B	0x01A4      	CLRF       FARG_SPI1_Write_data_
0x032C	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,81 :: 		CSN = 1;                           // Finalizo a comunicação  SPI
0x032D	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,84 :: 		CSN = 0;                           // Inicio a comunicação   SPI
0x032E	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,85 :: 		SPI1_Write(0x25);                  //spi_write(0x05);
0x032F	0x3025      	MOVLW      37
0x0330	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0331	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,86 :: 		SPI1_Write(CANAL);                 //spi_write(CANAL);
0x0332	0x306B      	MOVLW      107
0x0333	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0334	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,87 :: 		CSN = 1;                           // Finalizo a comunicação  SPI
0x0335	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,90 :: 		CSN = 0;                           // Inicio a comunicação   SPI
0x0336	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,91 :: 		SPI1_Write(0x26);                  //spi_write(0x26);
0x0337	0x3026      	MOVLW      38
0x0338	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0339	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,92 :: 		SPI1_Write(0b00100110);            //spi_write(0b00100110);
0x033A	0x3026      	MOVLW      38
0x033B	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x033C	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,93 :: 		CSN = 1;                           // Finalizo a comunicação   SPI
0x033D	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,96 :: 		CSN = 0;                           // Inicio a comunicação  SPI
0x033E	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,97 :: 		SPI1_Write(0x27);                  //spi_write(0x27);
0x033F	0x3027      	MOVLW      39
0x0340	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0341	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,98 :: 		SPI1_Write(0x70);                  //spi_write(0x70);
0x0342	0x3070      	MOVLW      112
0x0343	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0344	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,99 :: 		CSN = 1;                           // Finalizo a comunicação  SPI
0x0345	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,102 :: 		CSN = 0;                           // Inicio a comunicação  SPI
0x0346	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,103 :: 		SPI1_Write(0x31);                  //spi_write(0x31);
0x0347	0x3031      	MOVLW      49
0x0348	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0349	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,104 :: 		SPI1_Write(BUFFER);                //spi_write(BUFFER);
0x034A	0x3005      	MOVLW      5
0x034B	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x034C	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,105 :: 		CSN = 1;                           // Finalizo a comunicação  SPI
0x034D	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,108 :: 		CSN = 0;                           // Inicio a comunicação  SPI
0x034E	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,109 :: 		SPI1_Write(0x20);                  //spi_write(0x20);
0x034F	0x3020      	MOVLW      32
0x0350	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0351	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,110 :: 		SPI1_Write(0x0F);                  //spi_write(0x0F);
0x0352	0x300F      	MOVLW      15
0x0353	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x0354	0x20D4      	CALL       _SPI1_Write
;nrf24l01.h,111 :: 		CSN = 1;                           // Finalizo a comunicação  SPI
0x0355	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,114 :: 		delay_ms(2);
0x0356	0x300B      	MOVLW      11
0x0357	0x00FC      	MOVWF      R12
0x0358	0x3062      	MOVLW      98
0x0359	0x00FD      	MOVWF      R13
L_config_nrf240:
0x035A	0x0BFD      	DECFSZ     R13, 1
0x035B	0x2B5A      	GOTO       L_config_nrf240
0x035C	0x0BFC      	DECFSZ     R12, 1
0x035D	0x2B5A      	GOTO       L_config_nrf240
0x035E	0x0000      	NOP
;nrf24l01.h,115 :: 		CE = 1;
0x035F	0x1505      	BSF        RA2_bit, BitPos(RA2_bit+0)
;nrf24l01.h,116 :: 		delay_us(150);
0x0360	0x30C7      	MOVLW      199
0x0361	0x00FD      	MOVWF      R13
L_config_nrf241:
0x0362	0x0BFD      	DECFSZ     R13, 1
0x0363	0x2B62      	GOTO       L_config_nrf241
0x0364	0x0000      	NOP
0x0365	0x0000      	NOP
;nrf24l01.h,119 :: 		GIE_bit = 0;
0x0366	0x138B      	BCF        GIE_bit, BitPos(GIE_bit+0)
;nrf24l01.h,120 :: 		PEIE_bit = 1;
0x0367	0x170B      	BSF        PEIE_bit, BitPos(PEIE_bit+0)
;nrf24l01.h,121 :: 		INTE_bit = 1;
0x0368	0x160B      	BSF        INTE_bit, BitPos(INTE_bit+0)
;nrf24l01.h,122 :: 		INTEDG_bit = 0;
0x0369	0x1683      	BSF        STATUS, 5
0x036A	0x1301      	BCF        INTEDG_bit, BitPos(INTEDG_bit+0)
;nrf24l01.h,123 :: 		IRQ_Direction = 1;
0x036B	0x1406      	BSF        TRISB0_bit, BitPos(TRISB0_bit+0)
;nrf24l01.h,124 :: 		GIE_bit = 1;
0x036C	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;nrf24l01.h,126 :: 		}
L_end_config_nrf24:
0x036D	0x0008      	RETURN
; end of _config_nrf24
_recebe_dados:
;nrf24l01.h,219 :: 		void recebe_dados(){
;nrf24l01.h,225 :: 		GIE_bit = 0;
0x036E	0x138B      	BCF        GIE_bit, BitPos(GIE_bit+0)
;nrf24l01.h,227 :: 		CSN = 0;
0x036F	0x1283      	BCF        STATUS, 5
0x0370	0x1303      	BCF        STATUS, 6
0x0371	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,228 :: 		SSPIF_bit = 0;
0x0372	0x118C      	BCF        SSPIF_bit, BitPos(SSPIF_bit+0)
;nrf24l01.h,229 :: 		SSPBUF = 0x07;                                   //SPI1_Write(0x07);
0x0373	0x3007      	MOVLW      7
0x0374	0x0093      	MOVWF      SSPBUF
;nrf24l01.h,230 :: 		while(!SSPIF_bit);                               /// Aguardo o envio do byte alocado anteriormente
L_recebe_dados12:
0x0375	0x198C      	BTFSC      SSPIF_bit, BitPos(SSPIF_bit+0)
0x0376	0x2B78      	GOTO       L_recebe_dados13
0x0377	0x2B75      	GOTO       L_recebe_dados12
L_recebe_dados13:
;nrf24l01.h,232 :: 		SSPIF_bit = 0;
0x0378	0x118C      	BCF        SSPIF_bit, BitPos(SSPIF_bit+0)
;nrf24l01.h,233 :: 		SSPBUF = 0x00;                                   //SPI1_Read(0);
0x0379	0x0193      	CLRF       SSPBUF
;nrf24l01.h,234 :: 		while(!SSPIF_bit);                               // Aguardo o envio do byte alocado anteriormente
L_recebe_dados14:
0x037A	0x198C      	BTFSC      SSPIF_bit, BitPos(SSPIF_bit+0)
0x037B	0x2B7D      	GOTO       L_recebe_dados15
0x037C	0x2B7A      	GOTO       L_recebe_dados14
L_recebe_dados15:
;nrf24l01.h,235 :: 		status = SSPBUF;
0x037D	0x0813      	MOVF       SSPBUF, 0
0x037E	0x00F2      	MOVWF      R2
;nrf24l01.h,236 :: 		CSN = 1;
0x037F	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,239 :: 		CSN = 0;
0x0380	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,240 :: 		SSPIF_bit = 0;
0x0381	0x118C      	BCF        SSPIF_bit, BitPos(SSPIF_bit+0)
;nrf24l01.h,241 :: 		SSPBUF = 0x27;                                   //SPI1_Write(0x27);
0x0382	0x3027      	MOVLW      39
0x0383	0x0093      	MOVWF      SSPBUF
;nrf24l01.h,242 :: 		while(!SSPIF_bit);                               /// Aguardo o envio do byte alocado anteriormente
L_recebe_dados16:
0x0384	0x198C      	BTFSC      SSPIF_bit, BitPos(SSPIF_bit+0)
0x0385	0x2B87      	GOTO       L_recebe_dados17
0x0386	0x2B84      	GOTO       L_recebe_dados16
L_recebe_dados17:
;nrf24l01.h,244 :: 		SSPIF_bit = 0;
0x0387	0x118C      	BCF        SSPIF_bit, BitPos(SSPIF_bit+0)
;nrf24l01.h,245 :: 		SSPBUF = 0x70;                                   //SPI1_Write(0x70);
0x0388	0x3070      	MOVLW      112
0x0389	0x0093      	MOVWF      SSPBUF
;nrf24l01.h,246 :: 		while(!SSPIF_bit);                               // Aguardo o envio do byte alocado anteriormente
L_recebe_dados18:
0x038A	0x198C      	BTFSC      SSPIF_bit, BitPos(SSPIF_bit+0)
0x038B	0x2B8D      	GOTO       L_recebe_dados19
0x038C	0x2B8A      	GOTO       L_recebe_dados18
L_recebe_dados19:
;nrf24l01.h,247 :: 		CSN = 1;
0x038D	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,250 :: 		if( status & 0x40 == 0 )
0x038E	0x3000      	MOVLW      0
0x038F	0x0572      	ANDWF      R2, 0
0x0390	0x00F0      	MOVWF      R0
0x0391	0x1903      	BTFSC      STATUS, 2
0x0392	0x2B93      	GOTO       L_recebe_dados20
;nrf24l01.h,255 :: 		}
L_recebe_dados20:
;nrf24l01.h,258 :: 		CSN = 0;
0x0393	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,259 :: 		SSPIF_bit = 0;
0x0394	0x118C      	BCF        SSPIF_bit, BitPos(SSPIF_bit+0)
;nrf24l01.h,260 :: 		SSPBUF = 0x61;                                   //SPI1_Write(0x61);
0x0395	0x3061      	MOVLW      97
0x0396	0x0093      	MOVWF      SSPBUF
;nrf24l01.h,261 :: 		while(!SSPIF_bit);                               // Aguardo o envio do byte alocado anteriormente
L_recebe_dados21:
0x0397	0x198C      	BTFSC      SSPIF_bit, BitPos(SSPIF_bit+0)
0x0398	0x2B9A      	GOTO       L_recebe_dados22
0x0399	0x2B97      	GOTO       L_recebe_dados21
L_recebe_dados22:
;nrf24l01.h,262 :: 		for( i=0; i < BUFFER; i++)
0x039A	0x01F1      	CLRF       R1
L_recebe_dados23:
0x039B	0x3005      	MOVLW      5
0x039C	0x0271      	SUBWF      R1, 0
0x039D	0x1803      	BTFSC      STATUS, 0
0x039E	0x2BAB      	GOTO       L_recebe_dados24
;nrf24l01.h,264 :: 		SSPIF_bit = 0;
0x039F	0x118C      	BCF        SSPIF_bit, BitPos(SSPIF_bit+0)
;nrf24l01.h,265 :: 		SSPBUF = 0x00;                                   //SPI1_Read(0);
0x03A0	0x0193      	CLRF       SSPBUF
;nrf24l01.h,266 :: 		while(!SSPIF_bit);                               // Aguardo o envio do byte alocado anteriormente
L_recebe_dados26:
0x03A1	0x198C      	BTFSC      SSPIF_bit, BitPos(SSPIF_bit+0)
0x03A2	0x2BA4      	GOTO       L_recebe_dados27
0x03A3	0x2BA1      	GOTO       L_recebe_dados26
L_recebe_dados27:
;nrf24l01.h,267 :: 		RECEBE[i] = SSPBUF;
0x03A4	0x0871      	MOVF       R1, 0
0x03A5	0x3E47      	ADDLW      _RECEBE
0x03A6	0x0084      	MOVWF      FSR
0x03A7	0x0813      	MOVF       SSPBUF, 0
0x03A8	0x0080      	MOVWF      INDF
;nrf24l01.h,262 :: 		for( i=0; i < BUFFER; i++)
0x03A9	0x0AF1      	INCF       R1, 1
;nrf24l01.h,269 :: 		}
0x03AA	0x2B9B      	GOTO       L_recebe_dados23
L_recebe_dados24:
;nrf24l01.h,270 :: 		CSN = 1;
0x03AB	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;nrf24l01.h,273 :: 		INTF_bit = 0;
0x03AC	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;nrf24l01.h,275 :: 		GIE_bit = 1;
0x03AD	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;nrf24l01.h,278 :: 		}
L_end_recebe_dados:
0x03AE	0x0008      	RETURN
; end of _recebe_dados
_main:
0x03AF	0x1283      	BCF        STATUS, 5
0x03B0	0x1303      	BCF        STATUS, 6
0x03B1	0x01A5      	CLRF       _Tempo_L_vel
0x03B2	0x01A6      	CLRF       _Tempo_L_rpm
0x03B3	0x01A7      	CLRF       _marcha
0x03B4	0x302C      	MOVLW      44
0x03B5	0x00A8      	MOVWF      ?lstr6_Painel_software_pic16f73
0x03B6	0x01A9      	CLRF       41
0x03B7	0x302C      	MOVLW      44
0x03B8	0x00AA      	MOVWF      ?lstr4_Painel_software_pic16f73
0x03B9	0x01AB      	CLRF       43
0x03BA	0x302C      	MOVLW      44
0x03BB	0x00AC      	MOVWF      ?lstr5_Painel_software_pic16f73
0x03BC	0x01AD      	CLRF       45
0x03BD	0x302C      	MOVLW      44
0x03BE	0x00AE      	MOVWF      ?lstr1_Painel_software_pic16f73
0x03BF	0x01AF      	CLRF       47
0x03C0	0x302C      	MOVLW      44
0x03C1	0x00B0      	MOVWF      ?lstr2_Painel_software_pic16f73
0x03C2	0x01B1      	CLRF       49
0x03C3	0x302C      	MOVLW      44
0x03C4	0x00B2      	MOVWF      ?lstr3_Painel_software_pic16f73
0x03C5	0x01B3      	CLRF       51
;Painel_software_pic16f73.c,166 :: 		void main()
;Painel_software_pic16f73.c,170 :: 		unsigned char a,b,cc,dd = 0;
0x03C6	0x01EF      	CLRF       main_dd_L0
0x03C7	0x302A      	MOVLW      42
0x03C8	0x1683      	BSF        STATUS, 5
0x03C9	0x00A0      	MOVWF      main_txt1_L0
0x03CA	0x302A      	MOVLW      42
0x03CB	0x00A1      	MOVWF      main_txt1_L0+1
0x03CC	0x3020      	MOVLW      32
0x03CD	0x00A2      	MOVWF      main_txt1_L0+2
0x03CE	0x3045      	MOVLW      69
0x03CF	0x00A3      	MOVWF      main_txt1_L0+3
0x03D0	0x3053      	MOVLW      83
0x03D1	0x00A4      	MOVWF      main_txt1_L0+4
0x03D2	0x3043      	MOVLW      67
0x03D3	0x00A5      	MOVWF      main_txt1_L0+5
0x03D4	0x3055      	MOVLW      85
0x03D5	0x00A6      	MOVWF      main_txt1_L0+6
0x03D6	0x3044      	MOVLW      68
0x03D7	0x00A7      	MOVWF      main_txt1_L0+7
0x03D8	0x3045      	MOVLW      69
0x03D9	0x00A8      	MOVWF      main_txt1_L0+8
0x03DA	0x3052      	MOVLW      82
0x03DB	0x00A9      	MOVWF      main_txt1_L0+9
0x03DC	0x3049      	MOVLW      73
0x03DD	0x00AA      	MOVWF      main_txt1_L0+10
0x03DE	0x3041      	MOVLW      65
0x03DF	0x00AB      	MOVWF      main_txt1_L0+11
0x03E0	0x3020      	MOVLW      32
0x03E1	0x00AC      	MOVWF      main_txt1_L0+12
0x03E2	0x302A      	MOVLW      42
0x03E3	0x00AD      	MOVWF      main_txt1_L0+13
0x03E4	0x302A      	MOVLW      42
0x03E5	0x00AE      	MOVWF      main_txt1_L0+14
0x03E6	0x01AF      	CLRF       main_txt1_L0+15
0x03E7	0x302A      	MOVLW      42
0x03E8	0x00B0      	MOVWF      main_txt2_L0
0x03E9	0x302A      	MOVLW      42
0x03EA	0x00B1      	MOVWF      main_txt2_L0+1
0x03EB	0x302A      	MOVLW      42
0x03EC	0x00B2      	MOVWF      main_txt2_L0+2
0x03ED	0x302A      	MOVLW      42
0x03EE	0x00B3      	MOVWF      main_txt2_L0+3
0x03EF	0x3020      	MOVLW      32
0x03F0	0x00B4      	MOVWF      main_txt2_L0+4
0x03F1	0x3055      	MOVLW      85
0x03F2	0x00B5      	MOVWF      main_txt2_L0+5
0x03F3	0x3046      	MOVLW      70
0x03F4	0x00B6      	MOVWF      main_txt2_L0+6
0x03F5	0x3053      	MOVLW      83
0x03F6	0x00B7      	MOVWF      main_txt2_L0+7
0x03F7	0x3041      	MOVLW      65
0x03F8	0x00B8      	MOVWF      main_txt2_L0+8
0x03F9	0x3045      	MOVLW      69
0x03FA	0x00B9      	MOVWF      main_txt2_L0+9
0x03FB	0x3020      	MOVLW      32
0x03FC	0x00BA      	MOVWF      main_txt2_L0+10
0x03FD	0x302A      	MOVLW      42
0x03FE	0x00BB      	MOVWF      main_txt2_L0+11
0x03FF	0x302A      	MOVLW      42
0x0400	0x00BC      	MOVWF      main_txt2_L0+12
0x0401	0x302A      	MOVLW      42
0x0402	0x00BD      	MOVWF      main_txt2_L0+13
0x0403	0x302A      	MOVLW      42
0x0404	0x00BE      	MOVWF      main_txt2_L0+14
0x0405	0x01BF      	CLRF       main_txt2_L0+15
0x0406	0x3020      	MOVLW      32
0x0407	0x00C0      	MOVWF      main_txt3_L0
0x0408	0x3020      	MOVLW      32
0x0409	0x00C1      	MOVWF      main_txt3_L0+1
0x040A	0x3020      	MOVLW      32
0x040B	0x00C2      	MOVWF      main_txt3_L0+2
0x040C	0x3020      	MOVLW      32
0x040D	0x00C3      	MOVWF      main_txt3_L0+3
0x040E	0x3043      	MOVLW      67
0x040F	0x00C4      	MOVWF      main_txt3_L0+4
0x0410	0x3045      	MOVLW      69
0x0411	0x00C5      	MOVWF      main_txt3_L0+5
0x0412	0x304E      	MOVLW      78
0x0413	0x00C6      	MOVWF      main_txt3_L0+6
0x0414	0x3054      	MOVLW      84
0x0415	0x00C7      	MOVWF      main_txt3_L0+7
0x0416	0x3052      	MOVLW      82
0x0417	0x00C8      	MOVWF      main_txt3_L0+8
0x0418	0x3041      	MOVLW      65
0x0419	0x00C9      	MOVWF      main_txt3_L0+9
0x041A	0x304C      	MOVLW      76
0x041B	0x00CA      	MOVWF      main_txt3_L0+10
0x041C	0x3020      	MOVLW      32
0x041D	0x00CB      	MOVWF      main_txt3_L0+11
0x041E	0x3020      	MOVLW      32
0x041F	0x00CC      	MOVWF      main_txt3_L0+12
0x0420	0x3020      	MOVLW      32
0x0421	0x00CD      	MOVWF      main_txt3_L0+13
0x0422	0x3020      	MOVLW      32
0x0423	0x00CE      	MOVWF      main_txt3_L0+14
0x0424	0x01CF      	CLRF       main_txt3_L0+15
0x0425	0x3020      	MOVLW      32
0x0426	0x00D0      	MOVWF      main_txt4_L0
0x0427	0x3020      	MOVLW      32
0x0428	0x00D1      	MOVWF      main_txt4_L0+1
0x0429	0x3044      	MOVLW      68
0x042A	0x00D2      	MOVWF      main_txt4_L0+2
0x042B	0x3045      	MOVLW      69
0x042C	0x00D3      	MOVWF      main_txt4_L0+3
0x042D	0x3020      	MOVLW      32
0x042E	0x00D4      	MOVWF      main_txt4_L0+4
0x042F	0x3043      	MOVLW      67
0x0430	0x00D5      	MOVWF      main_txt4_L0+5
0x0431	0x304F      	MOVLW      79
0x0432	0x00D6      	MOVWF      main_txt4_L0+6
0x0433	0x304E      	MOVLW      78
0x0434	0x00D7      	MOVWF      main_txt4_L0+7
0x0435	0x3054      	MOVLW      84
0x0436	0x00D8      	MOVWF      main_txt4_L0+8
0x0437	0x3052      	MOVLW      82
0x0438	0x00D9      	MOVWF      main_txt4_L0+9
0x0439	0x304F      	MOVLW      79
0x043A	0x00DA      	MOVWF      main_txt4_L0+10
0x043B	0x304C      	MOVLW      76
0x043C	0x00DB      	MOVWF      main_txt4_L0+11
0x043D	0x3045      	MOVLW      69
0x043E	0x00DC      	MOVWF      main_txt4_L0+12
0x043F	0x3020      	MOVLW      32
0x0440	0x00DD      	MOVWF      main_txt4_L0+13
0x0441	0x3020      	MOVLW      32
0x0442	0x00DE      	MOVWF      main_txt4_L0+14
0x0443	0x01DF      	CLRF       main_txt4_L0+15
;Painel_software_pic16f73.c,177 :: 		TRISA = 0x10;
0x0444	0x3010      	MOVLW      16
0x0445	0x0085      	MOVWF      TRISA
;Painel_software_pic16f73.c,178 :: 		TRISB = 0x03;
0x0446	0x3003      	MOVLW      3
0x0447	0x0086      	MOVWF      TRISB
;Painel_software_pic16f73.c,179 :: 		TRISC = 0x16;
0x0448	0x3016      	MOVLW      22
0x0449	0x0087      	MOVWF      TRISC
;Painel_software_pic16f73.c,181 :: 		Lcd_Init();                        // Inicialize LCD
0x044A	0x2241      	CALL       _Lcd_Init
;Painel_software_pic16f73.c,182 :: 		config_nrf24();                   //  Configure NRF24
0x044B	0x22DD      	CALL       _config_nrf24
;Painel_software_pic16f73.c,184 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
0x044C	0x3001      	MOVLW      1
0x044D	0x00E5      	MOVWF      FARG_Lcd_Cmd_out_char
0x044E	0x207D      	CALL       _Lcd_Cmd
;Painel_software_pic16f73.c,185 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
0x044F	0x300C      	MOVLW      12
0x0450	0x1683      	BSF        STATUS, 5
0x0451	0x00E5      	MOVWF      FARG_Lcd_Cmd_out_char
0x0452	0x207D      	CALL       _Lcd_Cmd
;Painel_software_pic16f73.c,186 :: 		Lcd_Out(1,1,txt1);                 // Write text in first row
0x0453	0x3001      	MOVLW      1
0x0454	0x1683      	BSF        STATUS, 5
0x0455	0x00E0      	MOVWF      FARG_Lcd_Out_row
0x0456	0x3001      	MOVLW      1
0x0457	0x00E1      	MOVWF      FARG_Lcd_Out_column
0x0458	0x30A0      	MOVLW      main_txt1_L0
0x0459	0x00E2      	MOVWF      FARG_Lcd_Out_text
0x045A	0x21F8      	CALL       _Lcd_Out
;Painel_software_pic16f73.c,187 :: 		Lcd_Out(2,1,txt2);                 // Write text in second row
0x045B	0x3002      	MOVLW      2
0x045C	0x1683      	BSF        STATUS, 5
0x045D	0x00E0      	MOVWF      FARG_Lcd_Out_row
0x045E	0x3001      	MOVLW      1
0x045F	0x00E1      	MOVWF      FARG_Lcd_Out_column
0x0460	0x30B0      	MOVLW      main_txt2_L0
0x0461	0x00E2      	MOVWF      FARG_Lcd_Out_text
0x0462	0x21F8      	CALL       _Lcd_Out
;Painel_software_pic16f73.c,188 :: 		Delay_ms( 2000 );
0x0463	0x3029      	MOVLW      41
0x0464	0x00FB      	MOVWF      R11
0x0465	0x3096      	MOVLW      150
0x0466	0x00FC      	MOVWF      R12
0x0467	0x307F      	MOVLW      127
0x0468	0x00FD      	MOVWF      R13
L_main62:
0x0469	0x0BFD      	DECFSZ     R13, 1
0x046A	0x2C69      	GOTO       L_main62
0x046B	0x0BFC      	DECFSZ     R12, 1
0x046C	0x2C69      	GOTO       L_main62
0x046D	0x0BFB      	DECFSZ     R11, 1
0x046E	0x2C69      	GOTO       L_main62
;Painel_software_pic16f73.c,189 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
0x046F	0x3001      	MOVLW      1
0x0470	0x1683      	BSF        STATUS, 5
0x0471	0x00E5      	MOVWF      FARG_Lcd_Cmd_out_char
0x0472	0x207D      	CALL       _Lcd_Cmd
;Painel_software_pic16f73.c,190 :: 		Lcd_Out(1,1,txt3);                 // Write text in first row
0x0473	0x3001      	MOVLW      1
0x0474	0x1683      	BSF        STATUS, 5
0x0475	0x00E0      	MOVWF      FARG_Lcd_Out_row
0x0476	0x3001      	MOVLW      1
0x0477	0x00E1      	MOVWF      FARG_Lcd_Out_column
0x0478	0x30C0      	MOVLW      main_txt3_L0
0x0479	0x00E2      	MOVWF      FARG_Lcd_Out_text
0x047A	0x21F8      	CALL       _Lcd_Out
;Painel_software_pic16f73.c,191 :: 		Lcd_Out(2,1,txt4);                 // Write text in second row
0x047B	0x3002      	MOVLW      2
0x047C	0x1683      	BSF        STATUS, 5
0x047D	0x00E0      	MOVWF      FARG_Lcd_Out_row
0x047E	0x3001      	MOVLW      1
0x047F	0x00E1      	MOVWF      FARG_Lcd_Out_column
0x0480	0x30D0      	MOVLW      main_txt4_L0
0x0481	0x00E2      	MOVWF      FARG_Lcd_Out_text
0x0482	0x21F8      	CALL       _Lcd_Out
;Painel_software_pic16f73.c,192 :: 		Delay_ms( 2000 );
0x0483	0x3029      	MOVLW      41
0x0484	0x00FB      	MOVWF      R11
0x0485	0x3096      	MOVLW      150
0x0486	0x00FC      	MOVWF      R12
0x0487	0x307F      	MOVLW      127
0x0488	0x00FD      	MOVWF      R13
L_main63:
0x0489	0x0BFD      	DECFSZ     R13, 1
0x048A	0x2C89      	GOTO       L_main63
0x048B	0x0BFC      	DECFSZ     R12, 1
0x048C	0x2C89      	GOTO       L_main63
0x048D	0x0BFB      	DECFSZ     R11, 1
0x048E	0x2C89      	GOTO       L_main63
;Painel_software_pic16f73.c,193 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
0x048F	0x3001      	MOVLW      1
0x0490	0x1683      	BSF        STATUS, 5
0x0491	0x00E5      	MOVWF      FARG_Lcd_Cmd_out_char
0x0492	0x207D      	CALL       _Lcd_Cmd
;Painel_software_pic16f73.c,196 :: 		INTCON      = 0x00;                        //Desabilita interrupção global , interrupção por periféricos  e interrupção externa
0x0493	0x018B      	CLRF       INTCON
;Painel_software_pic16f73.c,197 :: 		TMR1IE_bit  = 0x00;                        //Desabilita interrupções de TMR1
0x0494	0x1683      	BSF        STATUS, 5
0x0495	0x100C      	BCF        TMR1IE_bit, BitPos(TMR1IE_bit+0)
;Painel_software_pic16f73.c,198 :: 		CCP1IE_bit  = 0x00;                        //Habilita interrupções do módulo CCP1
0x0496	0x110C      	BCF        CCP1IE_bit, BitPos(CCP1IE_bit+0)
;Painel_software_pic16f73.c,199 :: 		CCP1CON     = 0x05;                        //Configura captura por borda de subida
0x0497	0x3005      	MOVLW      5
0x0498	0x1283      	BCF        STATUS, 5
0x0499	0x0097      	MOVWF      CCP1CON
;Painel_software_pic16f73.c,200 :: 		T1CON       = 0x00;                        // conf preescale de 1:1 e FOSC/4
0x049A	0x0190      	CLRF       T1CON
;Painel_software_pic16f73.c,202 :: 		CCP2IE_bit  = 0x00;                        //Habilita interrupções do módulo CCP2
0x049B	0x1683      	BSF        STATUS, 5
0x049C	0x100D      	BCF        CCP2IE_bit, BitPos(CCP2IE_bit+0)
;Painel_software_pic16f73.c,205 :: 		INTCON      = 0xD0;                        //Habilita interrupção global , interrupção por periféricos  e interrupção externa
0x049D	0x30D0      	MOVLW      208
0x049E	0x008B      	MOVWF      INTCON
;Painel_software_pic16f73.c,207 :: 		while(1)
L_main64:
;Painel_software_pic16f73.c,209 :: 		medicao_marcha();
0x049F	0x229B      	CALL       _medicao_marcha
;Painel_software_pic16f73.c,211 :: 		ENVIA[0]= marcha;
0x04A0	0x0827      	MOVF       _marcha, 0
0x04A1	0x00B5      	MOVWF      _ENVIA
;Painel_software_pic16f73.c,212 :: 		ENVIA[1]= Tempo_H_rpm;
0x04A2	0x0834      	MOVF       _Tempo_H_rpm, 0
0x04A3	0x00B6      	MOVWF      _ENVIA+1
;Painel_software_pic16f73.c,213 :: 		ENVIA[2]= Tempo_L_rpm;
0x04A4	0x0826      	MOVF       _Tempo_L_rpm, 0
0x04A5	0x00B7      	MOVWF      _ENVIA+2
;Painel_software_pic16f73.c,214 :: 		ENVIA[3]= Tempo_H_vel;
0x04A6	0x083E      	MOVF       _Tempo_H_vel, 0
0x04A7	0x00B8      	MOVWF      _ENVIA+3
;Painel_software_pic16f73.c,215 :: 		ENVIA[4]= Tempo_L_vel;
0x04A8	0x0825      	MOVF       _Tempo_L_vel, 0
0x04A9	0x00B9      	MOVWF      _ENVIA+4
;Painel_software_pic16f73.c,218 :: 		CSN = 0;
0x04AA	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;Painel_software_pic16f73.c,219 :: 		SPI1_Write(0x07);
0x04AB	0x3007      	MOVLW      7
0x04AC	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x04AD	0x20D4      	CALL       _SPI1_Write
;Painel_software_pic16f73.c,220 :: 		a = SPI1_Read(0);
0x04AE	0x01A3      	CLRF       FARG_SPI1_Read_buffer
0x04AF	0x20E8      	CALL       _SPI1_Read
0x04B0	0x0870      	MOVF       R0, 0
0x04B1	0x00EC      	MOVWF      main_a_L0
;Painel_software_pic16f73.c,221 :: 		CSN = 1;
0x04B2	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;Painel_software_pic16f73.c,224 :: 		CSN = 0;
0x04B3	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;Painel_software_pic16f73.c,225 :: 		SPI1_Write(0x00);
0x04B4	0x01A4      	CLRF       FARG_SPI1_Write_data_
0x04B5	0x20D4      	CALL       _SPI1_Write
;Painel_software_pic16f73.c,226 :: 		b = SPI1_Read(0);
0x04B6	0x01A3      	CLRF       FARG_SPI1_Read_buffer
0x04B7	0x20E8      	CALL       _SPI1_Read
0x04B8	0x0870      	MOVF       R0, 0
0x04B9	0x00ED      	MOVWF      main_b_L0
;Painel_software_pic16f73.c,227 :: 		CSN = 1;
0x04BA	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;Painel_software_pic16f73.c,230 :: 		CSN = 0;
0x04BB	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;Painel_software_pic16f73.c,231 :: 		SPI1_Write(0x02);
0x04BC	0x3002      	MOVLW      2
0x04BD	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x04BE	0x20D4      	CALL       _SPI1_Write
;Painel_software_pic16f73.c,232 :: 		cc = SPI1_Read(0);
0x04BF	0x01A3      	CLRF       FARG_SPI1_Read_buffer
0x04C0	0x20E8      	CALL       _SPI1_Read
0x04C1	0x0870      	MOVF       R0, 0
0x04C2	0x00EE      	MOVWF      main_cc_L0
;Painel_software_pic16f73.c,233 :: 		CSN = 1;
0x04C3	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;Painel_software_pic16f73.c,236 :: 		CSN = 0;
0x04C4	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;Painel_software_pic16f73.c,237 :: 		SPI1_Write(0x0A);
0x04C5	0x300A      	MOVLW      10
0x04C6	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x04C7	0x20D4      	CALL       _SPI1_Write
;Painel_software_pic16f73.c,238 :: 		dd = SPI1_Read(0);
0x04C8	0x01A3      	CLRF       FARG_SPI1_Read_buffer
0x04C9	0x20E8      	CALL       _SPI1_Read
0x04CA	0x0870      	MOVF       R0, 0
0x04CB	0x00EF      	MOVWF      main_dd_L0
;Painel_software_pic16f73.c,239 :: 		CSN = 1;
0x04CC	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;Painel_software_pic16f73.c,243 :: 		ByteToStr( a, x1 );
0x04CD	0x086C      	MOVF       main_a_L0, 0
0x04CE	0x1683      	BSF        STATUS, 5
0x04CF	0x00E0      	MOVWF      FARG_ByteToStr_input
0x04D0	0x303A      	MOVLW      _x1
0x04D1	0x00E1      	MOVWF      FARG_ByteToStr_output
0x04D2	0x213E      	CALL       _ByteToStr
;Painel_software_pic16f73.c,244 :: 		ByteToStr( b, x2 );
0x04D3	0x1283      	BCF        STATUS, 5
0x04D4	0x1303      	BCF        STATUS, 6
0x04D5	0x086D      	MOVF       main_b_L0, 0
0x04D6	0x1683      	BSF        STATUS, 5
0x04D7	0x00E0      	MOVWF      FARG_ByteToStr_input
0x04D8	0x303F      	MOVLW      _x2
0x04D9	0x00E1      	MOVWF      FARG_ByteToStr_output
0x04DA	0x213E      	CALL       _ByteToStr
;Painel_software_pic16f73.c,245 :: 		ByteToStr( cc, x3 );
0x04DB	0x1283      	BCF        STATUS, 5
0x04DC	0x1303      	BCF        STATUS, 6
0x04DD	0x086E      	MOVF       main_cc_L0, 0
0x04DE	0x1683      	BSF        STATUS, 5
0x04DF	0x00E0      	MOVWF      FARG_ByteToStr_input
0x04E0	0x3054      	MOVLW      _x3
0x04E1	0x00E1      	MOVWF      FARG_ByteToStr_output
0x04E2	0x213E      	CALL       _ByteToStr
;Painel_software_pic16f73.c,246 :: 		ByteToStr( dd, x4 );
0x04E3	0x1283      	BCF        STATUS, 5
0x04E4	0x1303      	BCF        STATUS, 6
0x04E5	0x086F      	MOVF       main_dd_L0, 0
0x04E6	0x1683      	BSF        STATUS, 5
0x04E7	0x00E0      	MOVWF      FARG_ByteToStr_input
0x04E8	0x3058      	MOVLW      _x4
0x04E9	0x00E1      	MOVWF      FARG_ByteToStr_output
0x04EA	0x213E      	CALL       _ByteToStr
;Painel_software_pic16f73.c,248 :: 		Lcd_Out( 1,1, x1 );
0x04EB	0x3001      	MOVLW      1
0x04EC	0x1683      	BSF        STATUS, 5
0x04ED	0x1303      	BCF        STATUS, 6
0x04EE	0x00E0      	MOVWF      FARG_Lcd_Out_row
0x04EF	0x3001      	MOVLW      1
0x04F0	0x00E1      	MOVWF      FARG_Lcd_Out_column
0x04F1	0x303A      	MOVLW      _x1
0x04F2	0x00E2      	MOVWF      FARG_Lcd_Out_text
0x04F3	0x21F8      	CALL       _Lcd_Out
;Painel_software_pic16f73.c,249 :: 		Lcd_Out_Cp(",");
0x04F4	0x302E      	MOVLW      ?lstr1_Painel_software_pic16f73
0x04F5	0x1683      	BSF        STATUS, 5
0x04F6	0x00E0      	MOVWF      FARG_Lcd_Out_CP_text
0x04F7	0x212B      	CALL       _Lcd_Out_CP
;Painel_software_pic16f73.c,250 :: 		Lcd_Out_Cp( x2 );
0x04F8	0x303F      	MOVLW      _x2
0x04F9	0x00E0      	MOVWF      FARG_Lcd_Out_CP_text
0x04FA	0x212B      	CALL       _Lcd_Out_CP
;Painel_software_pic16f73.c,251 :: 		Lcd_Out_Cp(",");
0x04FB	0x3030      	MOVLW      ?lstr2_Painel_software_pic16f73
0x04FC	0x00E0      	MOVWF      FARG_Lcd_Out_CP_text
0x04FD	0x212B      	CALL       _Lcd_Out_CP
;Painel_software_pic16f73.c,252 :: 		Lcd_Out_Cp( x3 );
0x04FE	0x3054      	MOVLW      _x3
0x04FF	0x00E0      	MOVWF      FARG_Lcd_Out_CP_text
0x0500	0x212B      	CALL       _Lcd_Out_CP
;Painel_software_pic16f73.c,253 :: 		Lcd_Out_Cp(",");
0x0501	0x3032      	MOVLW      ?lstr3_Painel_software_pic16f73
0x0502	0x00E0      	MOVWF      FARG_Lcd_Out_CP_text
0x0503	0x212B      	CALL       _Lcd_Out_CP
;Painel_software_pic16f73.c,254 :: 		Lcd_Out_Cp( x4 );
0x0504	0x3058      	MOVLW      _x4
0x0505	0x00E0      	MOVWF      FARG_Lcd_Out_CP_text
0x0506	0x212B      	CALL       _Lcd_Out_CP
;Painel_software_pic16f73.c,256 :: 		ByteToStr( TEMPO_H_vel , x5 );
0x0507	0x1283      	BCF        STATUS, 5
0x0508	0x083E      	MOVF       _Tempo_H_vel, 0
0x0509	0x1683      	BSF        STATUS, 5
0x050A	0x00E0      	MOVWF      FARG_ByteToStr_input
0x050B	0x3064      	MOVLW      _x5
0x050C	0x00E1      	MOVWF      FARG_ByteToStr_output
0x050D	0x213E      	CALL       _ByteToStr
;Painel_software_pic16f73.c,257 :: 		ByteToStr( TEMPO_L_vel, x6 );
0x050E	0x1283      	BCF        STATUS, 5
0x050F	0x1303      	BCF        STATUS, 6
0x0510	0x0825      	MOVF       _Tempo_L_vel, 0
0x0511	0x1683      	BSF        STATUS, 5
0x0512	0x00E0      	MOVWF      FARG_ByteToStr_input
0x0513	0x305C      	MOVLW      _x6
0x0514	0x00E1      	MOVWF      FARG_ByteToStr_output
0x0515	0x213E      	CALL       _ByteToStr
;Painel_software_pic16f73.c,258 :: 		ByteToStr( TEMPO_H_rpm, x7 );
0x0516	0x1283      	BCF        STATUS, 5
0x0517	0x1303      	BCF        STATUS, 6
0x0518	0x0834      	MOVF       _Tempo_H_rpm, 0
0x0519	0x1683      	BSF        STATUS, 5
0x051A	0x00E0      	MOVWF      FARG_ByteToStr_input
0x051B	0x3060      	MOVLW      _x7
0x051C	0x00E1      	MOVWF      FARG_ByteToStr_output
0x051D	0x213E      	CALL       _ByteToStr
;Painel_software_pic16f73.c,259 :: 		BytetoStr( TEMPO_L_rpm, x8);
0x051E	0x1283      	BCF        STATUS, 5
0x051F	0x1303      	BCF        STATUS, 6
0x0520	0x0826      	MOVF       _Tempo_L_rpm, 0
0x0521	0x1683      	BSF        STATUS, 5
0x0522	0x00E0      	MOVWF      FARG_ByteToStr_input
0x0523	0x3050      	MOVLW      _x8
0x0524	0x00E1      	MOVWF      FARG_ByteToStr_output
0x0525	0x213E      	CALL       _ByteToStr
;Painel_software_pic16f73.c,261 :: 		Lcd_Out( 2,1, x5 );
0x0526	0x3002      	MOVLW      2
0x0527	0x1683      	BSF        STATUS, 5
0x0528	0x1303      	BCF        STATUS, 6
0x0529	0x00E0      	MOVWF      FARG_Lcd_Out_row
0x052A	0x3001      	MOVLW      1
0x052B	0x00E1      	MOVWF      FARG_Lcd_Out_column
0x052C	0x3064      	MOVLW      _x5
0x052D	0x00E2      	MOVWF      FARG_Lcd_Out_text
0x052E	0x21F8      	CALL       _Lcd_Out
;Painel_software_pic16f73.c,262 :: 		Lcd_Out_Cp(",");
0x052F	0x302A      	MOVLW      ?lstr4_Painel_software_pic16f73
0x0530	0x1683      	BSF        STATUS, 5
0x0531	0x00E0      	MOVWF      FARG_Lcd_Out_CP_text
0x0532	0x212B      	CALL       _Lcd_Out_CP
;Painel_software_pic16f73.c,263 :: 		Lcd_Out_Cp( x6 );
0x0533	0x305C      	MOVLW      _x6
0x0534	0x00E0      	MOVWF      FARG_Lcd_Out_CP_text
0x0535	0x212B      	CALL       _Lcd_Out_CP
;Painel_software_pic16f73.c,264 :: 		Lcd_Out_Cp(",");
0x0536	0x302C      	MOVLW      ?lstr5_Painel_software_pic16f73
0x0537	0x00E0      	MOVWF      FARG_Lcd_Out_CP_text
0x0538	0x212B      	CALL       _Lcd_Out_CP
;Painel_software_pic16f73.c,265 :: 		Lcd_Out_Cp( x7 );
0x0539	0x3060      	MOVLW      _x7
0x053A	0x00E0      	MOVWF      FARG_Lcd_Out_CP_text
0x053B	0x212B      	CALL       _Lcd_Out_CP
;Painel_software_pic16f73.c,266 :: 		Lcd_Out_Cp(",");
0x053C	0x3028      	MOVLW      ?lstr6_Painel_software_pic16f73
0x053D	0x00E0      	MOVWF      FARG_Lcd_Out_CP_text
0x053E	0x212B      	CALL       _Lcd_Out_CP
;Painel_software_pic16f73.c,267 :: 		Lcd_Out_Cp( x8 );
0x053F	0x3050      	MOVLW      _x8
0x0540	0x00E0      	MOVWF      FARG_Lcd_Out_CP_text
0x0541	0x212B      	CALL       _Lcd_Out_CP
;Painel_software_pic16f73.c,270 :: 		ACK = envia_dados();
0x0542	0x217A      	CALL       _envia_dados
0x0543	0x0870      	MOVF       R0, 0
0x0544	0x00C3      	MOVWF      _ACK
;Painel_software_pic16f73.c,271 :: 		}
0x0545	0x2C9F      	GOTO       L_main64
;Painel_software_pic16f73.c,273 :: 		}
L_end_main:
0x0546	0x2D46      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [97]    _interrupt
0x0065       [5]    _Delay_1us
0x006A       [8]    _Delay_50us
0x0072      [11]    _Delay_5500us
0x007D      [87]    _Lcd_Cmd
0x00D4      [13]    _SPI1_Write
0x00E1       [7]    _____DoICP
0x00E8      [13]    _SPI1_Read
0x00F5      [28]    _SPI1_Init
0x0111       [9]    _Lcd_Chr_CP
0x011A      [17]    _Div_8X8_U
0x012B      [19]    _Lcd_Out_CP
0x013E      [60]    _ByteToStr
0x017A     [126]    _envia_dados
0x01F8      [73]    _Lcd_Out
0x0241      [78]    _Lcd_Init
0x028F      [12]    ___CC2DW
0x029B      [66]    _medicao_marcha
0x02DD     [145]    _config_nrf24
0x036E      [65]    _recebe_dados
0x03AF     [408]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [0]    RA3_bit
0x0005       [0]    RA2_bit
0x0005       [0]    CE
0x0005       [0]    MARCHA_2
0x0005       [0]    CSN
0x0005       [0]    RA4_bit
0x0006       [0]    RB2_bit
0x0006       [0]    LCD_RS
0x0006       [0]    IRQ
0x0006       [0]    RB3_bit
0x0006       [0]    RB5_bit
0x0006       [0]    RB4_bit
0x0006       [0]    LCD_EN
0x0006       [0]    LCD_D5
0x0006       [0]    MARCHA_1
0x0006       [0]    LCD_D4
0x0006       [0]    RB1_bit
0x0006       [0]    RB0_bit
0x0007       [0]    RC6_bit
0x0007       [0]    LCD_D7
0x0007       [0]    LCD_D6
0x0007       [0]    RC7_bit
0x000A       [1]    PCLATH
0x000B       [0]    PEIE_bit
0x000B       [0]    GIE_bit
0x000B       [1]    INTCON
0x000B       [0]    INTF_bit
0x000B       [0]    INTE_bit
0x000C       [0]    CCP1IF_bit
0x000C       [0]    SSPIF_bit
0x000D       [0]    CCP2IF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    TMR1ON_bit
0x0010       [1]    T1CON
0x0013       [1]    SSPBUF
0x0014       [1]    SSPCON
0x0015       [1]    CCPR1L
0x0016       [1]    CCPR1H
0x0017       [1]    CCP1CON
0x001B       [1]    CCPR2L
0x001C       [1]    CCPR2H
0x001D       [1]    CCP2CON
0x0023       [1]    FARG_SPI1_Read_buffer
0x0024       [1]    FARG_SPI1_Write_data_
0x0025       [1]    _Tempo_L_vel
0x0026       [1]    _Tempo_L_rpm
0x0027       [1]    _marcha
0x0028       [2]    ?lstr6_Painel_software_pic16f73
0x002A       [2]    ?lstr4_Painel_software_pic16f73
0x002C       [2]    ?lstr5_Painel_software_pic16f73
0x002E       [2]    ?lstr1_Painel_software_pic16f73
0x0030       [2]    ?lstr2_Painel_software_pic16f73
0x0032       [2]    ?lstr3_Painel_software_pic16f73
0x0034       [1]    _Tempo_H_rpm
0x0035       [5]    _ENVIA
0x003A       [4]    _x1
0x003E       [1]    _Tempo_H_vel
0x003F       [4]    _x2
0x0043       [1]    _ACK
0x0044       [3]    _SPI_Wr_Ptr
0x0047       [5]    _RECEBE
0x004C       [0]    __Lib_Lcd_cmd_status
0x004C       [0]    medicao_marcha_control2_L0
0x004C       [0]    medicao_marcha_control_L0
0x004D       [3]    _SPI_Rd_Ptr
0x0050       [4]    _x8
0x0054       [4]    _x3
0x0058       [4]    _x4
0x005C       [4]    _x6
0x0060       [4]    _x7
0x0064       [4]    _x5
0x0068       [1]    ___savePCLATH
0x0069       [1]    ___saveSTATUS
0x006A       [2]    ___DoICPAddr
0x006C       [1]    main_a_L0
0x006D       [1]    main_b_L0
0x006E       [1]    main_cc_L0
0x006F       [1]    main_dd_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    INTEDG_bit
0x0085       [1]    TRISA
0x0085       [0]    CSN_Direction
0x0085       [0]    TRISA3_bit
0x0085       [0]    TRISA2_bit
0x0085       [0]    CE_Direction
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB2_bit
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    LCD_EN_Direction
0x0086       [0]    LCD_RS_Direction
0x0086       [0]    IRQ_Direction
0x0086       [0]    LCD_D4_Direction
0x0086       [1]    TRISB
0x0086       [0]    LCD_D5_Direction
0x0087       [1]    TRISC
0x0087       [0]    LCD_D7_Direction
0x0087       [0]    LCD_D6_Direction
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC7_bit
0x0087       [0]    TRISC5_bit
0x0087       [0]    TRISC3_bit
0x0087       [0]    TRISC4_bit
0x008C       [0]    CCP1IE_bit
0x008C       [0]    TMR1IE_bit
0x008D       [0]    CCP2IE_bit
0x0094       [1]    SSPSTAT
0x00A0      [16]    main_txt1_L0
0x00B0      [16]    main_txt2_L0
0x00C0      [16]    main_txt3_L0
0x00D0      [16]    main_txt4_L0
0x00E0       [1]    FARG_Lcd_Out_CP_text
0x00E0       [1]    FARG_Lcd_Out_row
0x00E0       [2]    envia_dados_espera_ack_L0
0x00E0       [1]    FARG_ByteToStr_input
0x00E1       [1]    FARG_ByteToStr_output
0x00E1       [1]    Lcd_Out_CP_i_L0
0x00E1       [1]    FARG_Lcd_Out_column
0x00E2       [1]    envia_dados_i_L0
0x00E2       [1]    ByteToStr_DigitPos_L0
0x00E2       [1]    FARG_Lcd_Out_text
0x00E3       [1]    FLOC__ByteToStr
0x00E3       [1]    Lcd_Out_i_L0
0x00E4       [1]    FARG_Lcd_Chr_CP_out_char
0x00E5       [1]    FARG_Lcd_Cmd_out_char
